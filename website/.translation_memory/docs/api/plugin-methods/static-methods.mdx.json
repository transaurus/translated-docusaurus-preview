{
  "source_file_path_relative_to_docusaurus_root": "docs/api/plugin-methods/static-methods.mdx",
  "source_file_content_hash": "8086243dddaf39dd4527ac08fd7f65b3982957e2b0a69112e5e44820e071a980",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nsidebar_position: 4\n---",
      "source_content_hash": "e93552de73713fd3d4c67121db57ba65cc2e8e129d1829ed5f8a7888cea6601e",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "f85bbfb4",
      "source_content": "# Static methods",
      "source_content_hash": "a7d86ddda2747dac26709deb2a0dd0ff35490ccfd64bf031bb5e2416b6c3a353",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 静态方法"
      }
    },
    {
      "segment_id": "6ef78e84",
      "source_content": "Static methods are not part of the plugin instance—they are attached to the constructor function. These methods are used to validate and normalize the plugin options and theme config, which are then used as constructor parameters to initialize the plugin instance.",
      "source_content_hash": "395679653986fd8f79be5002c6b7ee195266cff38e3b961c03dbdbbc13ff5299",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "静态方法不属于插件实例——它们附加在构造函数上。这些方法用于验证和规范化插件选项及主题配置，随后这些参数将作为构造函数的入参来初始化插件实例。"
      }
    },
    {
      "segment_id": "d912d376",
      "source_content": "## `validateOptions({options, validate})` {#validateOptions}",
      "source_content_hash": "cb8e550e5e00ec0026f4fdb9da5b121db69800c227708eb4ae0fc4334042867b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## `validateOptions({options, validate})` {#validateOptions}"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "Returns validated and normalized options for the plugin. This method is called before the plugin is initialized. You must return the options since they will be passed to the plugin during initialization.",
      "source_content_hash": "1b6566a067c3de34c2e9ab789d6bea2890545afc6ccc80c0492a04555c8371b7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "返回经过验证和规范化的插件选项。该方法在插件初始化前被调用，必须返回选项对象，因为它们将在初始化时传递给插件。"
      }
    },
    {
      "segment_id": "ba4f48ff",
      "source_content": "### `options` {#options}",
      "source_content_hash": "27d5298b74e101fc5068af653dafd9cf01ff7cc76c85407a97de3ebcc640ecad",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### `options` {#options}"
      }
    },
    {
      "segment_id": "cf898102",
      "source_content": "`validateOptions` is called with `options` passed to plugin for validation and normalization.",
      "source_content_hash": "2705fea6d3315652fd3a9824fae08207c34cb244159fb9a17d393528c99fb2fe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`validateOptions` 方法接收传入插件的 `options` 参数进行验证和规范化处理。"
      }
    },
    {
      "segment_id": "3daf1b88",
      "source_content": "### `validate` {#validate}",
      "source_content_hash": "fd85674a2cb510f76eeaaf147898eacf185e75873bb8902f8e5e67b28c325a6f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### `validate` {#validate}"
      }
    },
    {
      "segment_id": "f6168993",
      "source_content": "`validateOptions` is called with `validate` function which takes a **[Joi](https://www.npmjs.com/package/joi)** schema and options as the arguments, returns validated and normalized options. `validate` will automatically handle error and validation config.",
      "source_content_hash": "3ccdd2f491fed9396dc63369d8ca17ff24a227b07b369088080441d45ecdab11",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`validateOptions` 方法接收 `validate` 函数作为参数，该函数接受 **[Joi](https://www.npmjs.com/package/joi)** 模式和选项作为参数，返回经过验证和规范化的选项。`validate` 会自动处理错误和验证配置。"
      }
    },
    {
      "segment_id": "cac45343",
      "source_content": ":::tip\n\n[Joi](https://www.npmjs.com/package/joi) is recommended for validation and normalization of options.\n\nTo avoid mixing Joi versions, use `import {Joi} from '@docusaurus/utils-validation'`\n\n:::",
      "source_content_hash": "82c09f3bc3dc08913d1d7a278cf765ba89b3d776d962e8260f23ef35ca753d8f",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n推荐使用 [Joi](https://www.npmjs.com/package/joi) 进行选项的验证和规范化。\n\n为避免 Joi 版本冲突，请使用 `import {Joi} from '@docusaurus/utils-validation'`\n\n:::"
      }
    },
    {
      "segment_id": "4b1d2d7d",
      "source_content": "If you don't use **[Joi](https://www.npmjs.com/package/joi)** for validation you can throw an Error in case of invalid options and return options in case of success.",
      "source_content_hash": "4cd74afdb5e1d7c631c76840547100eb941310072990baf3e99db074f5b01563",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若不使用 **[Joi](https://www.npmjs.com/package/joi)** 进行验证，可在选项无效时抛出错误，验证通过时返回选项对象。"
      }
    },
    {
      "segment_id": "cb57d798",
      "source_content": "```js title=\"my-plugin/src/index.js\"\nexport default function myPlugin(context, options) {\n  return {\n    name: 'docusaurus-plugin',\n    // rest of methods\n  };\n}\n\n// highlight-start\nexport function validateOptions({options, validate}) {\n  const validatedOptions = validate(myValidationSchema, options);\n  return validatedOptions;\n}\n// highlight-end\n```",
      "source_content_hash": "79109392df9a59cf66cd6a9732073dd3f05dea280f1fdb8e01431c14c917e336",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_cb57d798"
      }
    },
    {
      "segment_id": "f44c1398",
      "source_content": "## `validateThemeConfig({themeConfig, validate})` {#validateThemeConfig}",
      "source_content_hash": "bac739696cc9848011140ef4c23f89b973fb05269bcbf391fb7bd306f05b6d83",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## `validateThemeConfig({themeConfig, validate})` {#validateThemeConfig}"
      }
    },
    {
      "segment_id": "29528c8d",
      "source_content": "Return validated and normalized configuration for the theme.",
      "source_content_hash": "84d1461a32602a88e5dc892a1ab54f9c1fbb17de6ebf0f893f2ba9a60ad32bc5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "返回经过验证和规范化的主题配置。"
      }
    },
    {
      "segment_id": "11c76fcc",
      "source_content": "### `themeConfig` {#themeConfig}",
      "source_content_hash": "782709f4994b816e5db654ff2cadbf1a82aeea78b9968387a2e6c20905a25855",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### `themeConfig` {#themeConfig}"
      }
    },
    {
      "segment_id": "98d26038",
      "source_content": "`validateThemeConfig` is called with `themeConfig` provided in `docusaurus.config.js` for validation and normalization.",
      "source_content_hash": "7c9c564777de623bec741eec7db3b04ef6d6ed0bd062c24af2ea1b544cad6a56",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`validateThemeConfig` 方法接收 `docusaurus.config.js` 中提供的 `themeConfig` 进行验证和规范化处理。"
      }
    },
    {
      "segment_id": "af52d59d",
      "source_content": "### `validate` {#validate-1}",
      "source_content_hash": "1fe5f1584749f73066a2abcdc3e59744960becf73f98bc1964fea9e3dc0f1a8f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### `validate` {#validate-1}"
      }
    },
    {
      "segment_id": "4d52a261",
      "source_content": "`validateThemeConfig` is called with `validate` function which takes a **[Joi](https://www.npmjs.com/package/joi)** schema and `themeConfig` as the arguments, returns validated and normalized options. `validate` will automatically handle error and validation config.",
      "source_content_hash": "d605fde9fd034729e602ecf60d9848efab5d4a20c672f74489f1945da66a3e19",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`validateThemeConfig` 方法接收 `validate` 函数作为参数，该函数接受 **[Joi](https://www.npmjs.com/package/joi)** 模式和 `themeConfig` 作为参数，返回经过验证和规范化的选项。`validate` 会自动处理错误和验证配置。"
      }
    },
    {
      "segment_id": "97388c5b",
      "source_content": ":::tip\n\n[Joi](https://www.npmjs.com/package/joi) is recommended for validation and normalization of theme config.\n\nTo avoid mixing Joi versions, use `import {Joi} from '@docusaurus/utils-validation'`\n\n:::",
      "source_content_hash": "474932244914c41898a5f7f5ef1cb8012c8a1ca7a1174d7477b1ac1d62fc0ddc",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n推荐使用 [Joi](https://www.npmjs.com/package/joi) 进行主题配置的验证和规范化。\n\n为避免 Joi 版本冲突，请使用 `import {Joi} from '@docusaurus/utils-validation'`\n\n:::"
      }
    },
    {
      "segment_id": "0bb95128",
      "source_content": "If you don't use **[Joi](https://www.npmjs.com/package/joi)** for validation you can throw an Error in case of invalid options.",
      "source_content_hash": "0ae941298e6976a2cf59026c03e031e36341ae73dc86ad79b15897bbcd9473fe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若不使用 **[Joi](https://www.npmjs.com/package/joi)** 进行验证，可在配置无效时抛出错误。"
      }
    },
    {
      "segment_id": "29ad5b0e",
      "source_content": "```js title=\"my-theme/src/index.js\"\nexport default function myPlugin(context, options) {\n  return {\n    name: 'docusaurus-plugin',\n    // rest of methods\n  };\n}\n\n// highlight-start\nexport function validateThemeConfig({themeConfig, validate}) {\n  const validatedThemeConfig = validate(myValidationSchema, options);\n  return validatedThemeConfig;\n}\n// highlight-end\n```",
      "source_content_hash": "b27a0134e0ee553caaab3ea9abaed9ed57c74f3207129a2f103e56e8ce2a1728",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_29ad5b0e"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/current/api/plugin-methods/static-methods.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.699849+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "8086243dddaf39dd4527ac08fd7f65b3982957e2b0a69112e5e44820e071a980"
  }
}
