{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-2.x/advanced/plugins.mdx",
  "source_file_content_hash": "9cb175d2fbc463ea27fbbc06afcbbfcf009f51296cb75ffa7312e2ccf11e85d1",
  "segments": [
    {
      "segment_id": "76e4a56a",
      "source_content": "# Plugins",
      "source_content_hash": "687f7e20fac40fcedadc8a0fa36d35efb103974fe23b722fea0a15bae9bc055b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 插件"
      }
    },
    {
      "segment_id": "faebdc62",
      "source_content": "Plugins are the building blocks of features in a Docusaurus 2 site. Each plugin handles its own individual feature. Plugins may work and be distributed as part of a bundle via presets.",
      "source_content_hash": "0dde5176aaed8d4955345e242f811219c386b76e12f811ed93d6175f33fc75bb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "插件是 Docusaurus 2 站点功能的构建模块。每个插件处理其各自的独立功能。插件可以通过预设以捆绑包的形式工作和分发。"
      }
    },
    {
      "segment_id": "f85bbfb4",
      "source_content": "## Creating plugins {#creating-plugins}",
      "source_content_hash": "75480f2a2ec940b56593bfa0e0e9d8f514c1e0f3152e332884cf70f5cd011444",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 创建插件 {#creating-plugins}"
      }
    },
    {
      "segment_id": "6ef78e84",
      "source_content": "A plugin is a function that takes two parameters: `context` and `options`. It returns a plugin instance object (or a promise). You can create plugins as functions or modules. For more information, refer to the [plugin method references section](../api/plugin-methods/README.mdx).",
      "source_content_hash": "e6eb0a84e65a1434a4a6b1e4345595d4229c5ed65d5b9322a375f264290b95dd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "插件是一个接收两个参数的函数：`context` 和 `options`。它返回一个插件实例对象（或一个 Promise）。您可以将插件创建为函数或模块。更多信息，请参阅[插件方法参考部分](../api/plugin-methods/README.mdx)。"
      }
    },
    {
      "segment_id": "d912d376",
      "source_content": "### Function definition {#function-definition}",
      "source_content_hash": "375905ad23a956dffafb437ae8a86ba4e860f9ff8d4dcc1387c666e6b5a15565",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 函数定义 {#function-definition}"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "You can use a plugin as a function directly included in the Docusaurus config file:",
      "source_content_hash": "fddf6c280de7b4554d3ce6adc6cafda8c24029600efbc6c17a87fb464ca52fff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以直接在 Docusaurus 配置文件中以函数形式使用插件："
      }
    },
    {
      "segment_id": "b9c7a144",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // ...\n  plugins: [\n    // highlight-start\n    async function myPlugin(context, options) {\n      // ...\n      return {\n        name: 'my-plugin',\n        async loadContent() {\n          // ...\n        },\n        async contentLoaded({content, actions}) {\n          // ...\n        },\n        /* other lifecycle API */\n      };\n    },\n    // highlight-end\n  ],\n};\n```",
      "source_content_hash": "6e1ad574059f34bd4e053738263de6f01907febd3f819495250cafc789fe23d2",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b9c7a144"
      }
    },
    {
      "segment_id": "109ace10",
      "source_content": "### Module definition {#module-definition}",
      "source_content_hash": "5734577eff9a7f18f968b6a0c6cf0b3d596f71afe321623ac27c90adeedfb911",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 模块定义 {#module-definition}"
      }
    },
    {
      "segment_id": "135468ee",
      "source_content": "You can use a plugin as a module path referencing a separate file or npm package:",
      "source_content_hash": "5dadc2157fed26873773f854b04b145e450946c2284ed04485eb43879d6549ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以将插件作为引用单独文件或 npm 包的模块路径使用："
      }
    },
    {
      "segment_id": "a11df754",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // ...\n  plugins: [\n    // without options:\n    './my-plugin',\n    // or with options:\n    ['./my-plugin', options],\n  ],\n};\n```",
      "source_content_hash": "421909b64431318c9d4195987a97a5055cf3872d976474235011ec37c064b9d2",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_a11df754"
      }
    },
    {
      "segment_id": "f7ef78f9",
      "source_content": "Then in the folder `my-plugin`, you can create an `index.js` such as this:",
      "source_content_hash": "2946100ab95fcf6790607bf40774e58e05cfb3bb5ee5856ef52c8f42a549a76c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "然后在 `my-plugin` 文件夹中，您可以创建一个如下所示的 `index.js`："
      }
    },
    {
      "segment_id": "3ce8f045",
      "source_content": "```js title=\"my-plugin/index.js\"\nmodule.exports = async function myPlugin(context, options) {\n  // ...\n  return {\n    name: 'my-plugin',\n    async loadContent() {\n      /* ... */\n    },\n    async contentLoaded({content, actions}) {\n      /* ... */\n    },\n    /* other lifecycle API */\n  };\n};\n```",
      "source_content_hash": "11a7eb132172dcfc94d8b432f281651b8f758288810faf0d375c3a11c0cb8531",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3ce8f045"
      }
    },
    {
      "segment_id": "a635fada",
      "source_content": "---",
      "source_content_hash": "cb3f91d54eee30e53e35b2b99905f70f169ed549fd78909d3dac2defc9ed8d3b",
      "node_type": "thematicBreak",
      "translatable": true,
      "translations": {
        "zh-CN": "---"
      }
    },
    {
      "segment_id": "147e8550",
      "source_content": "You can view all plugins installed in your site using the [debug plugin's metadata panel](/__docusaurus/debug/metadata).",
      "source_content_hash": "9b82cde5a763f604e6efaf477b8ede221eec194695360cb5c130d178705dfc99",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以使用[调试插件的元数据面板](/__docusaurus/debug/metadata)查看站点中安装的所有插件。"
      }
    },
    {
      "segment_id": "883231d4",
      "source_content": "Plugins come as several types:",
      "source_content_hash": "337ed577646f6507b420dc521e37802b68ec558f3e075f76ded5d8674d452f1e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "插件有以下几种类型："
      }
    },
    {
      "segment_id": "4fe53981",
      "source_content": "- `package`: an external package you installed\n- `project`: a plugin you created in your project, given to Docusaurus as a local file path\n- `local`: a plugin created using the function definition\n- `synthetic`: a \"fake plugin\" Docusaurus created internally, so we take advantage of our modular architecture and don't let the core do much special work. You won't see this in the metadata because it's an implementation detail.",
      "source_content_hash": "56b06866a51cf160a65962b386651e9fea1a9dc9d13b3acd99bebf5688c801e0",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- `package`：您安装的外部包\n- `project`：您在项目中创建并通过本地文件路径提供给 Docusaurus 的插件\n- `local`：使用函数定义创建的插件\n- `synthetic`：Docusaurus 内部创建的“伪插件”，以便我们利用模块化架构，不让核心做太多特殊工作。您不会在元数据中看到此类型，因为这是一个实现细节。"
      }
    },
    {
      "segment_id": "463ed165",
      "source_content": "You can access them on the client side with `useDocusaurusContext().siteMetadata.pluginVersions`.",
      "source_content_hash": "315894feb353f7127e8f0e8489f48606cd08c326362ce9130eecfa5397d23148",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以通过 `useDocusaurusContext().siteMetadata.pluginVersions` 在客户端访问它们。"
      }
    },
    {
      "segment_id": "66819c78",
      "source_content": "## Plugin design {#plugin-design}",
      "source_content_hash": "a167796a8954b812505964b76220735d92e8272b6a5d56abc77cedc103916dc2",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 插件设计 {#plugin-design}"
      }
    },
    {
      "segment_id": "fbc2db85",
      "source_content": "Docusaurus' implementation of the plugins system provides us with a convenient way to hook into the website's lifecycle to modify what goes on during development/build, which involves (but is not limited to) extending the webpack config, modifying the data loaded, and creating new components to be used in a page.",
      "source_content_hash": "0cf0fbf8de89c48c581221f301c4c43ac3a027f53f6b49bf520f297a32b14d26",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 的插件系统实现为我们提供了一种便捷的方式来挂钩网站的生命周期，以修改开发/构建过程中的行为，这包括（但不限于）扩展 webpack 配置、修改加载的数据以及创建用于页面的新组件。"
      }
    },
    {
      "segment_id": "759d12dd",
      "source_content": "### Theme design {#theme-design}",
      "source_content_hash": "ac8e3b07d2a60e26d70ea62c3730dd5d6feaadf513f5bdf11c204f32dc88f7c6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 主题设计 {#theme-design}"
      }
    },
    {
      "segment_id": "74dd7937",
      "source_content": "When plugins have loaded their content, the data is made available to the client side through actions like [`createData` + `addRoute`](../api/plugin-methods/lifecycle-apis.mdx#addRoute) or [`setGlobalData`](../api/plugin-methods/lifecycle-apis.mdx#setGlobalData). This data has to be _serialized_ to plain strings, because [plugins and themes run in different environments](./architecture.mdx). Once the data arrives on the client side, the rest becomes familiar to React developers: data is passed along components, components are bundled with Webpack, and rendered to the window through `ReactDOM.render`...",
      "source_content_hash": "cacc729567c5628afb15e5a30fe93b8d16b589ac4ccfe4f8811b89f46ca6fba6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "当插件加载其内容后，数据通过诸如 [`createData` + `addRoute`](../api/plugin-methods/lifecycle-apis.mdx#addRoute) 或 [`setGlobalData`](../api/plugin-methods/lifecycle-apis.mdx#setGlobalData) 等操作提供给客户端。这些数据必须被_序列化_为纯字符串，因为[插件和主题运行在不同的环境中](./architecture.mdx)。一旦数据到达客户端，剩下的部分对 React 开发者来说就很熟悉了：数据通过组件传递，组件与 Webpack 捆绑，并通过 `ReactDOM.render` 渲染到窗口..."
      }
    },
    {
      "segment_id": "5803caac",
      "source_content": "**Themes provide the set of UI components to render the content.** Most content plugins need to be paired with a theme in order to be actually useful. The UI is a separate layer from the data schema, which makes swapping designs easy.",
      "source_content_hash": "0871f2cfb76ce3f995966423b13d96d3ecaba1387c9430cdf3002a3a3ae755f5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**主题提供用于渲染内容的 UI 组件集。** 大多数内容插件需要与主题配对才能实际有用。UI 是与数据模式分离的独立层，这使得更换设计变得容易。"
      }
    },
    {
      "segment_id": "51867d16",
      "source_content": "For example, a Docusaurus blog may consist of a blog plugin and a blog theme.",
      "source_content_hash": "954c9cbefb4911f99aed9f2dfb65fe4bd53a98ff896108fbf0bda0d629d428ee",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "例如，Docusaurus 博客可能由一个博客插件和一个博客主题组成。"
      }
    },
    {
      "segment_id": "8a58dc39",
      "source_content": ":::note\n\nThis is a contrived example: in practice, `@docusaurus/theme-classic` provides the theme for docs, blog, and layouts.\n\n:::",
      "source_content_hash": "0e736274c51a128430f5388960876cc8bcff3ea04bfbae9f34d695374e638f97",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::note\n\n这是一个刻意简化的示例：实际上，`@docusaurus/theme-classic` 为文档、博客和布局提供了主题。\n\n:::"
      }
    },
    {
      "segment_id": "efbe5e3f",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // highlight-next-line\n  themes: ['theme-blog'],\n  plugins: ['plugin-content-blog'],\n};\n```",
      "source_content_hash": "0108f6d8ec6782a909ca938682d4956be974f29b17bb918ad416af3fe98a1963",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_efbe5e3f"
      }
    },
    {
      "segment_id": "0e80209e",
      "source_content": "And if you want to use Bootstrap styling, you can swap out the theme with `theme-blog-bootstrap` (another fictitious non-existing theme):",
      "source_content_hash": "dd782191ef7c2bbc0482cc243dec093ff7ae4c4a8a3700938aee35add47cad86",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "如果您想使用 Bootstrap 样式，可以用 `theme-blog-bootstrap`（另一个虚构的不存在的主题）替换主题："
      }
    },
    {
      "segment_id": "59534425",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // highlight-next-line\n  themes: ['theme-blog-bootstrap'],\n  plugins: ['plugin-content-blog'],\n};\n```",
      "source_content_hash": "b50e94606028ccf2a885b7bd92e5a478a7cc8d0c5baccd1ea91484a4f0997488",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_59534425"
      }
    },
    {
      "segment_id": "1958bc43",
      "source_content": "Now, although the theme receives the same data from the plugin, how the theme chooses to _render_ the data as UI can be drastically different.",
      "source_content_hash": "7cafba0111356b748dabb645300ba32f5a0a9d95518a0d8ae92fd60bfcedf53b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现在，尽管主题从插件接收相同的数据，但主题选择如何将数据_渲染_为 UI 的方式可能截然不同。"
      }
    },
    {
      "segment_id": "a8610918",
      "source_content": "While themes share the exact same lifecycle methods with plugins, themes' implementations can look very different from those of plugins based on themes' designed objectives.",
      "source_content_hash": "6320fbdeb545ee978965b7ebbebf8422709a154d3516e488ebbb4e6ff7a095d1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "虽然主题与插件共享完全相同的生命周期方法，但基于主题的设计目标，主题的实现可能与插件的实现大不相同。"
      }
    },
    {
      "segment_id": "a6c928a1",
      "source_content": "Themes are designed to complete the build of your Docusaurus site and supply the components used by your site, plugins, and the themes themselves. A theme still acts like a plugin and exposes some lifecycle methods, but most likely they would not use [`loadContent`](../api/plugin-methods/lifecycle-apis.mdx#loadContent), since they only receive data from plugins, but don't generate data themselves; themes are typically also accompanied by an `src/theme` directory full of components, which are made known to the core through the [`getThemePath`](../api/plugin-methods/extend-infrastructure.mdx#getThemePath) lifecycle.",
      "source_content_hash": "66f9ef563b7f0257b75e33c2ec1ac33dd1b6a275622ca50c53cdc48e07f5bba3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "主题(Theme)的设计旨在完成Docusaurus站点的构建，并为站点、插件及主题自身提供所使用的组件。主题仍具有插件特性并暴露部分生命周期方法，但通常不会使用[`loadContent`](../api/plugin-methods/lifecycle-apis.mdx#loadContent)方法，因为主题仅接收来自插件的数据而不自行生成数据；主题通常还伴随一个包含组件的`src/theme`目录，这些组件通过[`getThemePath`](../api/plugin-methods/extend-infrastructure.mdx#getThemePath)生命周期方法向核心系统注册。"
      }
    },
    {
      "segment_id": "b6152880",
      "source_content": "To summarize:",
      "source_content_hash": "a69708d2da617d97fee24887c34c3458cc971e33274c1808c09a762cdc183a7e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "总结如下："
      }
    },
    {
      "segment_id": "40a587f3",
      "source_content": "- Themes share the same lifecycle methods with Plugins\n- Themes are run after all existing Plugins\n- Themes add component aliases by providing `getThemePath`.",
      "source_content_hash": "2e7c4e19abd18e828248d2b080a60049e5deb112c38bde6be5b905477d907cd2",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 主题与插件共享相同的生命周期方法\n- 主题在所有现有插件之后运行\n- 主题通过提供`getThemePath`来添加组件别名"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-2.x/advanced/plugins.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.632450+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "9cb175d2fbc463ea27fbbc06afcbbfcf009f51296cb75ffa7312e2ccf11e85d1"
  }
}