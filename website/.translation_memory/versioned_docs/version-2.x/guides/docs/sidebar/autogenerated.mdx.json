{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-2.x/guides/docs/sidebar/autogenerated.mdx",
  "source_file_content_hash": "f01d9b5843913b3950c462bb334ea7c95d6f0d71c7d8b0437c3b0c018fb855d8",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /sidebar/autogenerated\n---",
      "source_content_hash": "dc593a94e68dc14fbf7990297a2418d335b64fda880ef31b6def437b965396ec",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "f85bbfb4",
      "source_content": "# Autogenerated",
      "source_content_hash": "62130f76074cd5c9dc5571fe2eb2d5f6b99e5e8ec024dd407a07f82a95534d0e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 自动生成"
      }
    },
    {
      "segment_id": "10c4cb47",
      "source_content": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';",
      "source_content_hash": "86702643a5c3bdf74257ff6062535897129ed9144c4f5b70edfe338fef3e5c73",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_10c4cb47"
      }
    },
    {
      "segment_id": "7e5c5a39",
      "source_content": "Docusaurus can **create a sidebar automatically** from your **filesystem structure**: each folder creates a sidebar category, and each file creates a doc link.",
      "source_content_hash": "04905dc1bf715d7c01955d7adb79c6f353cd18efda0a783aed87ab3b00747bbe",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 能够根据**文件系统结构自动创建侧边栏**：每个文件夹生成一个侧边栏分类，每个文件生成一个文档链接。"
      }
    },
    {
      "segment_id": "ee201347",
      "source_content": "```ts\ntype SidebarItemAutogenerated = {\n  type: 'autogenerated';\n  dirName: string; // Source folder to generate the sidebar slice from (relative to docs)\n};\n```",
      "source_content_hash": "ddf58c2767b9091b33d814469325c3ea0ae0cc7bf0c9ba582f58faa7a7a0795c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_ee201347"
      }
    },
    {
      "segment_id": "f6168993",
      "source_content": "Docusaurus can generate a full sidebar from your docs folder:",
      "source_content_hash": "77cdd1cfabd6655cc7e7dbc2a0c0717dd645934d56a1aa776facca93eb6cb931",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 可以从您的文档文件夹生成完整的侧边栏："
      }
    },
    {
      "segment_id": "cbbebf8e",
      "source_content": "```js title=\"sidebars.js\"\nmodule.exports = {\n  myAutogeneratedSidebar: [\n    // highlight-start\n    {\n      type: 'autogenerated',\n      dirName: '.', // '.' means the current docs folder\n    },\n    // highlight-end\n  ],\n};\n```",
      "source_content_hash": "8d4b9783c6ea33989751cd49a2e40e2890ed0521e4a3612a04ffc2b1ed6f469a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_cbbebf8e"
      }
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "An `autogenerated` item is converted by Docusaurus to a **sidebar slice** (also discussed in [category shorthands](items.mdx#category-shorthand)): a list of items of type `doc` or `category`, so you can splice **multiple `autogenerated` items** from multiple directories, interleaving them with regular sidebar items, in one sidebar level.",
      "source_content_hash": "598e5536d43fd9dfc2ca76e4b8adfecbaefc1619e7997c2a46196ac31fceb4c6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`autogenerated` 条目会被 Docusaurus 转换为**侧边栏片段**（在[分类速记](items.mdx#category-shorthand)中也有讨论）：即一组类型为 `doc` 或 `category` 的条目，因此您可以在一个侧边栏层级中**拼接多个来自不同目录的 `autogenerated` 条目**，并与常规侧边栏条目交错排列。"
      }
    },
    {
      "segment_id": "e7c54101",
      "source_content": "<details>\n<summary>A real-world example</summary>\n\nConsider this file structure:\n\n```bash\ndocs\n├── api\n│   ├── product1-api\n│   │   └── api.md\n│   └── product2-api\n│       ├── basic-api.md\n│       └── pro-api.md\n├── intro.md\n└── tutorials\n    ├── advanced\n    │   ├── advanced1.md\n    │   ├── advanced2.md\n    │   └── read-more\n    │       ├── resource1.md\n    │       └── resource2.md\n    ├── easy\n    │   ├── easy1.md\n    │   └── easy2.md\n    ├── tutorial-end.md\n    ├── tutorial-intro.md\n    └── tutorial-medium.md\n```\n\nAnd assume every doc's ID is just its file name. If you define an autogenerated sidebar like this:\n\n```js title=\"sidebars.js\"\nmodule.exports = {\n  mySidebar: [\n    'intro',\n    {\n      type: 'category',\n      label: 'Tutorials',\n      items: [\n        'tutorial-intro',\n        // highlight-start\n        {\n          type: 'autogenerated',\n          dirName: 'tutorials/easy', // Generate sidebar slice from docs/tutorials/easy\n        },\n        // highlight-end\n        'tutorial-medium',\n        // highlight-start\n        {\n          type: 'autogenerated',\n          dirName: 'tutorials/advanced', // Generate sidebar slice from docs/tutorials/hard\n        },\n        // highlight-end\n        'tutorial-end',\n      ],\n    },\n    // highlight-start\n    {\n      type: 'autogenerated',\n      dirName: 'api', // Generate sidebar slice from docs/api\n    },\n    // highlight-end\n    {\n      type: 'category',\n      label: 'Community',\n      items: ['team', 'chat'],\n    },\n  ],\n};\n```\n\nIt would be resolved as:\n\n```js title=\"sidebars.js\"\nmodule.exports = {\n  mySidebar: [\n    'intro',\n    {\n      type: 'category',\n      label: 'Tutorials',\n      items: [\n        'tutorial-intro',\n        // highlight-start\n        // Two files in docs/tutorials/easy\n        'easy1',\n        'easy2',\n        // highlight-end\n        'tutorial-medium',\n        // highlight-start\n        // Two files and a folder in docs/tutorials/hard\n        'advanced1',\n        'advanced2',\n        {\n          type: 'category',\n          label: 'read-more',\n          items: ['resource1', 'resource2'],\n        },\n        // highlight-end\n        'tutorial-end',\n      ],\n    },\n    // highlight-start\n    // Two folders in docs/api\n    {\n      type: 'category',\n      label: 'product1-api',\n      items: ['api'],\n    },\n    {\n      type: 'category',\n      label: 'product2-api',\n      items: ['basic-api', 'pro-api'],\n    },\n    // highlight-end\n    {\n      type: 'category',\n      label: 'Community',\n      items: ['team', 'chat'],\n    },\n  ],\n};\n```\n\nNote how the autogenerate source directories themselves don't become categories: only the items they contain do. This is what we mean by \"sidebar slice\".\n\n</details>",
      "source_content_hash": "90b095baa6875b9f5a7281330a6e7f7b35cd39ba5dabe4aff0b284464ab5a5e5",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_e7c54101"
      }
    },
    {
      "segment_id": "7312e69e",
      "source_content": "## Category index convention {#category-index-convention}",
      "source_content_hash": "e0a939721f38c427cbde3fd4bf66c910beae91d15f8b5483805ebe28162ce07f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 分类索引约定 {#category-index-convention}"
      }
    },
    {
      "segment_id": "2dbfc5f7",
      "source_content": "Docusaurus can automatically link a category to its index document.",
      "source_content_hash": "d59f0381551f55f28e51be16807dec53e88ab721868ab5745e04b1b25caeecd6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 能自动将分类链接到其索引文档。"
      }
    },
    {
      "segment_id": "6b40e7a2",
      "source_content": "A category index document is a document following one of those filename conventions:",
      "source_content_hash": "ce8c30250c7df6958df73a20e38d99901e5716743f6cd21cb1ab50742dd3a12c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "分类索引文档是符合以下文件名约定之一的文档："
      }
    },
    {
      "segment_id": "af7b7e3f",
      "source_content": "- Named as `index` (case-insensitive): `docs/Guides/index.md`\n- Named as `README` (case-insensitive): `docs/Guides/README.mdx`\n- Same name as parent folder: `docs/Guides/Guides.md`",
      "source_content_hash": "a9a529fb27bd64fb9f1fc01dd8ad3ea90ce1fd0642dd3ab5a46f34e6b17ea3b9",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 命名为 `index`（不区分大小写）：`docs/Guides/index.md`\n- 命名为 `README`（不区分大小写）：`docs/Guides/README.mdx`\n- 与父文件夹同名：`docs/Guides/Guides.md`"
      }
    },
    {
      "segment_id": "62d066b0",
      "source_content": "This is equivalent to using a category with a [doc link](items.mdx#category-doc-link):",
      "source_content_hash": "b4751735a2cb37ea3d43853046c05bb7f4469ab52f3dde892d17d2544b130f8c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "这等同于使用带有[文档链接](items.mdx#category-doc-link)的分类："
      }
    },
    {
      "segment_id": "7eccd6ba",
      "source_content": "```js title=\"sidebars.js\"\nmodule.exports = {\n  docs: [\n    // highlight-start\n    {\n      type: 'category',\n      label: 'Guides',\n      link: {type: 'doc', id: 'Guides/index'},\n      items: [],\n    },\n    // highlight-end\n  ],\n};\n```",
      "source_content_hash": "1820579c611a66bccd598484f0809971f5a0b3a240112018f6ab4a09af3a37f5",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7eccd6ba"
      }
    },
    {
      "segment_id": "fe76c8d2",
      "source_content": ":::tip\n\nNaming your introductory document `README.md` makes it show up when browsing the folder using the GitHub interface, while using `index.md` makes the behavior more in line with how HTML files are served.\n\n:::",
      "source_content_hash": "f69085c15d46adcfd1a71c92cac2c85cce5f31ef6443009b807370d954b980e4",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n将介绍性文档命名为 `README.md` 可以让它在 GitHub 界面浏览文件夹时显示，而使用 `index.md` 则更符合 HTML 文件的默认行为。\n\n:::"
      }
    },
    {
      "segment_id": "8fa54d9a",
      "source_content": ":::tip\n\nIf a folder only has one index page, it will be turned into a link instead of a category. This is useful for **asset collocation**:\n\n```\nsome-doc\n├── index.md\n├── img1.png\n└── img2.png\n```\n\n:::",
      "source_content_hash": "e5f3bac7ab84bcbb4edc680a6b7b3a312d7de74dea4648b1babcdc1fa1838045",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n如果文件夹仅包含一个索引页面，它将被转换为链接而非分类。这对于**资源共置**非常有用：\n\n```\nsome-doc\n├── index.md\n├── img1.png\n└── img2.png\n```\n\n:::"
      }
    },
    {
      "segment_id": "d14e33c1",
      "source_content": "<details>\n\n<summary>Customizing category index matching</summary>\n\nIt is possible to opt out any of the category index conventions, or define even more conventions. You can inject your own `isCategoryIndex` matcher through the [`sidebarItemsGenerator`](#customize-the-sidebar-items-generator) callback. For example, you can also pick `intro` as another file name eligible for automatically becoming the category index.\n\n```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  plugins: [\n    [\n      '@docusaurus/plugin-content-docs',\n      {\n        async sidebarItemsGenerator({\n          ...args,\n          isCategoryIndex: defaultCategoryIndexMatcher, // The default matcher implementation, given below\n          defaultSidebarItemsGenerator,\n        }) {\n          return defaultSidebarItemsGenerator({\n            ...args,\n            // highlight-start\n            isCategoryIndex(doc) {\n              return (\n                // Also pick intro.md in addition to the default ones\n                doc.fileName.toLowerCase() === 'intro' ||\n                defaultCategoryIndexMatcher(doc)\n              );\n            },\n            // highlight-end\n          });\n        },\n      },\n    ],\n  ],\n};\n```\n\nOr choose to not have any category index convention.\n\n```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  plugins: [\n    [\n      '@docusaurus/plugin-content-docs',\n      {\n        async sidebarItemsGenerator({\n          ...args,\n          isCategoryIndex: defaultCategoryIndexMatcher, // The default matcher implementation, given below\n          defaultSidebarItemsGenerator,\n        }) {\n          return defaultSidebarItemsGenerator({\n            ...args,\n            // highlight-start\n            isCategoryIndex() {\n              // No doc will be automatically picked as category index\n              return false;\n            },\n            // highlight-end\n          });\n        },\n      },\n    ],\n  ],\n};\n```\n\nThe `isCategoryIndex` matcher will be provided with three fields:\n\n- `fileName`, the file's name without extension and with casing preserved\n- `directories`, the list of directory names _from the lowest level to the highest level_, relative to the docs root directory\n- `extension`, the file's extension, with a leading dot.\n\nFor example, for a doc file at `guides/sidebar/autogenerated.md`, the props the matcher receives are\n\n```js\nconst props = {\n  fileName: 'autogenerated',\n  directories: ['sidebar', 'guides'],\n  extension: '.md',\n};\n```\n\nThe default implementation is:\n\n```js\nfunction isCategoryIndex({fileName, directories}) {\n  const eligibleDocIndexNames = [\n    'index',\n    'readme',\n    directories[0].toLowerCase(),\n  ];\n  return eligibleDocIndexNames.includes(fileName.toLowerCase());\n}\n```\n\n</details>",
      "source_content_hash": "101591fef1a42068b16fd80d6aaa936996ccfc689429a55f99e5ec243d38ce46",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_d14e33c1"
      }
    },
    {
      "segment_id": "7f0accbb",
      "source_content": "## Autogenerated sidebar metadata {#autogenerated-sidebar-metadata}",
      "source_content_hash": "aa4be20e02542de55d256ccf905331f34ab158d691bc23fdbff8897fa388fe48",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 自动生成侧边栏元数据 {#autogenerated-sidebar-metadata}"
      }
    },
    {
      "segment_id": "130e2dfb",
      "source_content": "For handwritten sidebar definitions, you would provide metadata to sidebar items through `sidebars.js`; for autogenerated, Docusaurus would read them from the item's respective file. In addition, you may want to adjust the relative position of each item because, by default, items within a sidebar slice will be generated in **alphabetical order** (using file and folder names).",
      "source_content_hash": "9586f7e2e323ef85378517fee1702f94d6ed6fc2ef1f070a24440b7173c62559",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "对于手动编写的侧边栏定义，您需要通过 `sidebars.js` 为侧边栏条目提供元数据；对于自动生成的侧边栏，Docusaurus 会从条目对应的文件中读取这些元数据。此外，您可能需要调整每个条目的相对位置，因为默认情况下，侧边栏片段中的条目会按**字母顺序**（使用文件和文件夹名称）生成。"
      }
    },
    {
      "segment_id": "a4628837",
      "source_content": "### Doc item metadata {#doc-item-metadata}",
      "source_content_hash": "bf298a443eb232a544b4a6733db2f2d4f7735172d41d4fc085a254fedfbc6847",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 文档条目元数据 {#doc-item-metadata}"
      }
    },
    {
      "segment_id": "b2ffb658",
      "source_content": "The `label`, `className`, and `customProps` attributes are declared in front matter as `sidebar_label`, `sidebar_class_name`, and `sidebar_custom_props`, respectively. Position can be specified in the same way, via `sidebar_position` front matter.",
      "source_content_hash": "e6f9bc6a34fd95604483570c484c87ac8562e07b20b040448dad3aedf725e568",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`label`、`className` 和 `customProps` 属性分别在 front matter 中声明为 `sidebar_label`、`sidebar_class_name` 和 `sidebar_custom_props`。位置可以通过同样的方式，通过 `sidebar_position` front matter 指定。"
      }
    },
    {
      "segment_id": "7650124c",
      "source_content": "```md title=\"docs/tutorials/tutorial-easy.md\"\n---\n# highlight-start\nsidebar_position: 2\nsidebar_label: Easy\nsidebar_class_name: green\n# highlight-end\n---\n\n# Easy Tutorial\n\nThis is the easy tutorial!\n```",
      "source_content_hash": "a6b2e0a8a9cc4518d0d00cd92174be2d71aebc2c05df03ef041f0befffeaa2a4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7650124c"
      }
    },
    {
      "segment_id": "3d6aa925",
      "source_content": "### Category item metadata {#category-item-metadata}",
      "source_content_hash": "9ce5c95387b9e732e9302a98a09e272a1d85ef6042bed606b9ad5765f2392ed8",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 分类条目元数据 {#category-item-metadata}"
      }
    },
    {
      "segment_id": "b682f1ac",
      "source_content": "Add a `_category_.json` or `_category_.yml` file in the respective folder. You can specify any category metadata and also the `position` metadata. `label`, `className`, `position`, and `customProps` will default to the respective values of the category's linked doc, if there is one.",
      "source_content_hash": "a37d2feeca8b3d6a4235894b4145341bfbdaae0c82f54f498f30e3a3d48ca943",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在相应文件夹中添加 `_category_.json` 或 `_category_.yml` 文件。您可以指定任何分类元数据以及 `position` 元数据。如果分类有链接的文档，`label`、`className`、`position` 和 `customProps` 将默认使用该文档的相应值。"
      }
    },
    {
      "segment_id": "3b3ff123",
      "source_content": "<Tabs>\n<TabItem value=\"JSON\">\n\n```json title=\"docs/tutorials/_category_.json\"\n{\n  \"position\": 2.5,\n  \"label\": \"Tutorial\",\n  \"collapsible\": true,\n  \"collapsed\": false,\n  \"className\": \"red\",\n  \"link\": {\n    \"type\": \"generated-index\",\n    \"title\": \"Tutorial overview\"\n  },\n  \"customProps\": {\n    \"description\": \"This description can be used in the swizzled DocCard\"\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"YAML\">\n\n```yml title=\"docs/tutorials/_category_.yml\"\nposition: 2.5 # float position is supported\nlabel: 'Tutorial'\ncollapsible: true # make the category collapsible\ncollapsed: false # keep the category open by default\nclassName: red\nlink:\n  type: generated-index\n  title: Tutorial overview\ncustomProps:\n  description: This description can be used in the swizzled DocCard\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "0b584cb0cc1c2e87171d2732e77cf9f67d7c04e5588b1301329cb4280f96b554",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3b3ff123"
      }
    },
    {
      "segment_id": "66b54c86",
      "source_content": ":::info\n\nIf the `link` is explicitly specified, Docusaurus will not apply any [default conventions](#category-index-convention).\n\nThe doc links can be specified relatively, e.g. if the category is generated with the `guides` directory, `\"link\": {\"type\": \"doc\", \"id\": \"intro\"}` will be resolved to the ID `guides/intro`, only falling back to `intro` if a doc with the former ID doesn't exist.\n\nYou can also use `link: null` to opt out of default conventions and not generate any category index page.\n\n:::",
      "source_content_hash": "f0488b7754c0b30a68c566211e3bda2ba5a1f368f56dc2b95607d374984b29e6",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::info\n\n如果显式指定了 `link`，Docusaurus 将不会应用任何[默认约定](#category-index-convention)。\n\n文档链接可以相对指定，例如，如果分类是通过 `guides` 目录生成的，`\"link\": {\"type\": \"doc\", \"id\": \"intro\"}` 将解析为 ID `guides/intro`，仅当前者不存在时才会回退到 `intro`。\n\n您也可以使用 `link: null` 来退出默认约定，不生成任何分类索引页面。\n\n:::"
      }
    },
    {
      "segment_id": "a1f524e9",
      "source_content": ":::info\n\nThe position metadata is only used **within a sidebar slice**: Docusaurus does not re-order other items of your sidebar.\n\n:::",
      "source_content_hash": "a0e4d4b1d3c9caa836a42a030008a515241cb2883d7e0b23155376abf93b83a7",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::info\n\n位置元数据仅在**侧边栏片段内**使用：Docusaurus 不会重新排序侧边栏的其他条目。\n\n:::"
      }
    },
    {
      "segment_id": "b98aff93",
      "source_content": "## Using number prefixes {#using-number-prefixes}",
      "source_content_hash": "7d6a6559c9b2e9898744ccebf6b01ed32bb12a6031226935ff83bdcdd7d8d017",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 使用数字前缀 {#using-number-prefixes}"
      }
    },
    {
      "segment_id": "79496df8",
      "source_content": "A simple way to order an autogenerated sidebar is to prefix docs and folders by number prefixes, which also makes them appear in the file system in the same order when sorted by file name:",
      "source_content_hash": "ec39cdd92aed82fa7a87263994f4a5b28fe3bfa97c9b4b64ed5ca738599ede8c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "对自动生成的侧边栏进行排序的简单方法是为文档和文件夹添加数字前缀，这样按文件名排序时它们在文件系统中的显示顺序也会保持一致："
      }
    },
    {
      "segment_id": "c9affc65",
      "source_content": "```bash\ndocs\n├── 01-Intro.md\n├── 02-Tutorial Easy\n│   ├── 01-First Part.md\n│   ├── 02-Second Part.md\n│   └── 03-End.md\n├── 03-Tutorial Hard\n│   ├── 01-First Part.md\n│   ├── 02-Second Part.md\n│   ├── 03-Third Part.md\n│   └── 04-End.md\n└── 04-End.md\n```",
      "source_content_hash": "ba46b3d00c99994e47b81535e027e21d859d467a7b2ab70fa1bc6d0846727c2b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_c9affc65"
      }
    },
    {
      "segment_id": "5a6dd931",
      "source_content": "To make it **easier to adopt**, Docusaurus supports **multiple number prefix patterns**.",
      "source_content_hash": "3c0ac31c9baaed206562dd4d1fa14892686d85dacfdb1abd3daf8b28c1968a52",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "为了**降低使用门槛**，Docusaurus 支持**多种数字前缀模式**。"
      }
    },
    {
      "segment_id": "b0e8431f",
      "source_content": "By default, Docusaurus will **remove the number prefix** from the doc id, title, label, and URL paths.",
      "source_content_hash": "b16bf5b99212f6797b9dfb81faa3b36f70a3ae3cdbd86bd8073349cb630c941d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "默认情况下，Docusaurus 会**移除数字前缀**，不会将其显示在文档 ID、标题、标签和 URL 路径中。"
      }
    },
    {
      "segment_id": "8536fc61",
      "source_content": ":::warning\n\n**Prefer using [additional metadata](#autogenerated-sidebar-metadata)**.\n\nUpdating a number prefix can be annoying, as it can require **updating multiple existing Markdown links**:\n\n```diff title=\"docs/02-Tutorial Easy/01-First Part.md\"\n- Check the [Tutorial End](../04-End.mdx);\n+ Check the [Tutorial End](../05-End.mdx);\n```\n\n:::",
      "source_content_hash": "b0f1379b3bde0ae1a50524f69a10b00ac132654b90f1deeab2cd4b11af0c1667",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n**建议优先使用[附加元数据](#autogenerated-sidebar-metadata)**。\n\n更新数字前缀可能很麻烦，因为这可能要求**更新多个现有的 Markdown 链接**：\n\n```diff title=\"docs/02-Tutorial Easy/01-First Part.md\"\n- 查看[教程结尾](../04-End.mdx);\n+ 查看[教程结尾](../05-End.mdx);\n```\n\n:::"
      }
    },
    {
      "segment_id": "52c6a5e7",
      "source_content": "## Customize the sidebar items generator {#customize-the-sidebar-items-generator}",
      "source_content_hash": "d62b60b222ec5c72060fd125ded1d46a9d523dacb66be5cde3f8065ac6edb011",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 自定义侧边栏项目生成器 {#customize-the-sidebar-items-generator}"
      }
    },
    {
      "segment_id": "a279d6f8",
      "source_content": "You can provide a custom `sidebarItemsGenerator` function in the docs plugin (or preset) config:",
      "source_content_hash": "f775b97c39b52c3211e80d9243f58f5b2e5f2b79fb52dca27ed7b9431c7fe5fc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以在文档插件（或预设）配置中提供自定义的 `sidebarItemsGenerator` 函数："
      }
    },
    {
      "segment_id": "d8b7afcb",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  plugins: [\n    [\n      '@docusaurus/plugin-content-docs',\n      {\n        // highlight-start\n        async sidebarItemsGenerator({\n          defaultSidebarItemsGenerator,\n          numberPrefixParser,\n          item,\n          version,\n          docs,\n          categoriesMetadata,\n          isCategoryIndex,\n        }) {\n          // Example: return an hardcoded list of static sidebar items\n          return [\n            {type: 'doc', id: 'doc1'},\n            {type: 'doc', id: 'doc2'},\n          ];\n        },\n        // highlight-end\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "32ef84484cd4be309c118ad95d15930370cbed60cc5d5321213b487e02fa7ade",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_d8b7afcb"
      }
    },
    {
      "segment_id": "2d6200b5",
      "source_content": ":::tip\n\n**Re-use and enhance the default generator** instead of writing a generator from scratch: [the default generator we provide](https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-plugin-content-docs/src/sidebars/generator.ts) is 250 lines long.\n\n**Add, update, filter, re-order** the sidebar items according to your use case:\n\n```js title=\"docusaurus.config.js\"\n// highlight-start\n// Reverse the sidebar items ordering (including nested category items)\nfunction reverseSidebarItems(items) {\n  // Reverse items in categories\n  const result = items.map((item) => {\n    if (item.type === 'category') {\n      return {...item, items: reverseSidebarItems(item.items)};\n    }\n    return item;\n  });\n  // Reverse items at current level\n  result.reverse();\n  return result;\n}\n// highlight-end\n\nmodule.exports = {\n  plugins: [\n    [\n      '@docusaurus/plugin-content-docs',\n      {\n        // highlight-start\n        async sidebarItemsGenerator({defaultSidebarItemsGenerator, ...args}) {\n          const sidebarItems = await defaultSidebarItemsGenerator(args);\n          return reverseSidebarItems(sidebarItems);\n        },\n        // highlight-end\n      },\n    ],\n  ],\n};\n```\n\n:::",
      "source_content_hash": "fa2a54992e7779e4e80d7cb8bc4dd9dc40c824ce0a3770423f6f562309d6d121",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n**复用并增强默认生成器**，而不是从头开始编写生成器：[我们提供的默认生成器](https://github.com/facebook/docusaurus/blob/main/packages/docusaurus-plugin-content-docs/src/sidebars/generator.ts)长达 250 行代码。\n\n根据您的使用场景**添加、更新、筛选、重新排序**侧边栏项目：\n\n```js title=\"docusaurus.config.js\"\n// highlight-start\n// 反转侧边栏项目顺序（包括嵌套的分类项目）\nfunction reverseSidebarItems(items) {\n  // 反转分类中的项目\n  const result = items.map((item) => {\n    if (item.type === 'category') {\n      return {...item, items: reverseSidebarItems(item.items)};\n    }\n    return item;\n  });\n  // 反转当前层级的项目\n  result.reverse();\n  return result;\n}\n// highlight-end\n\nmodule.exports = {\n  plugins: [\n    [\n      '@docusaurus/plugin-content-docs',\n      {\n        // highlight-start\n        async sidebarItemsGenerator({defaultSidebarItemsGenerator, ...args}) {\n          const sidebarItems = await defaultSidebarItemsGenerator(args);\n          return reverseSidebarItems(sidebarItems);\n        },\n        // highlight-end\n      },\n    ],\n  ],\n};\n```\n\n:::"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-2.x/guides/docs/sidebar/autogenerated.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.737329+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "f01d9b5843913b3950c462bb334ea7c95d6f0d71c7d8b0437c3b0c018fb855d8"
  }
}