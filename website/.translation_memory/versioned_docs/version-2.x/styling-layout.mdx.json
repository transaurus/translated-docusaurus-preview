{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-2.x/styling-layout.mdx",
  "source_file_content_hash": "79914c678bd928f01664af5f865fbf8dab6205a74649f8dd01ae2f3971f95a9b",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ndescription: A Docusaurus site is a pre-rendered single-page React application. You can style it the way you style React apps.\n---",
      "source_content_hash": "e559565150e43d81d293e03ad8f14518e2ffa0cfb8a261961875faa9da0ae484",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "7335511f",
      "source_content": "import ColorGenerator from '@site/src/components/ColorGenerator';",
      "source_content_hash": "cdc1dfd29be8d178a8c55d34197b9d963ffc6e66ec343d54bd5af4a20f38e472",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7335511f"
      }
    },
    {
      "segment_id": "a703643c",
      "source_content": "# Styling and Layout",
      "source_content_hash": "5873a5bf32699d6a85e833c46ec3741a96998066a2f8c32bc1d5075f14d07940",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 样式与布局"
      }
    },
    {
      "segment_id": "0d5e1c45",
      "source_content": ":::tip\n\nThis section is focused on styling through stylesheets. For more advanced customizations (DOM structure, React code...), refer to the [swizzling guide](./swizzling.mdx).\n\n:::",
      "source_content_hash": "ba89f46a9281b4fe97485d46f1575529b91f711ff83d4f4c904b04a8bd008487",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n本节重点介绍通过样式表进行样式定制。如需更高级的自定义（DOM结构、React代码等），请参阅[组件替换指南](./swizzling.mdx)。\n\n:::"
      }
    },
    {
      "segment_id": "cf898102",
      "source_content": "A Docusaurus site is a single-page React application. You can style it the way you style React apps.",
      "source_content_hash": "043061424585b062821c004d06c9fbc64554972df73ce5263312c2bc1f789683",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus站点是一个单页React应用，其样式方式与常规React应用相同。"
      }
    },
    {
      "segment_id": "42ad8e83",
      "source_content": "There are a few approaches/frameworks which will work, depending on your preferences and the type of website you are trying to build. Websites that are highly interactive and behave more like web apps will benefit from more modern styling approaches that co-locate styles with the components. Component styling can also be particularly useful when you wish to customize or swizzle a component.",
      "source_content_hash": "a103b7c61905be1a1e3605a941b0722520df4b289c78be0cde198e10e299d7c7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "根据您的偏好和网站类型，可采用多种样式方案：对于高交互性、类似Web应用的站点，现代样式方案（将样式与组件共置）更具优势；当您需要定制或替换组件时，组件级样式也特别有用。"
      }
    },
    {
      "segment_id": "aee0e40d",
      "source_content": "## Global styles {#global-styles}",
      "source_content_hash": "63276890470f4f75b175c407b8e7dd783f75cd3f3b6eda80ad1a07860e81ba5d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 全局样式 {#global-styles}"
      }
    },
    {
      "segment_id": "f5f6d2ce",
      "source_content": "This is the most traditional way of styling that most developers (including non-front-end developers) would be familiar with. It works fine for small websites that do not have much customization.",
      "source_content_hash": "81f9811b704c4700587bf681a47cc321f348ddfd1cfed4f0d23256b25569e017",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "这是大多数开发者（包括非前端开发者）最熟悉的传统样式方案，适合定制需求较少的小型网站。"
      }
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "If you're using `@docusaurus/preset-classic`, you can create your own CSS files (e.g. `/src/css/custom.css`) and import them globally by passing them as an option of the classic theme.",
      "source_content_hash": "31663c5419593a3e2f75218913e59714bbdd72749b26baf68ef095b3def9a669",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若使用`@docusaurus/preset-classic`，您可创建自定义CSS文件（如`/src/css/custom.css`），并通过经典主题配置选项将其全局导入。"
      }
    },
    {
      "segment_id": "3569d545",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        // highlight-start\n        theme: {\n          customCss: [require.resolve('./src/css/custom.css')],\n        },\n        // highlight-end\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "2b7576bb640463a48dddaca6118f8544f13081eccb92cd7c697ccdd91da31d42",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3569d545"
      }
    },
    {
      "segment_id": "1042b50d",
      "source_content": "Any CSS you write within that file will be available globally and can be referenced directly using string literals.",
      "source_content_hash": "1640ede8790776eea47b678bef554a568dc1d3c94575daf2062bf5d691067b4a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "该文件内编写的所有CSS将全局生效，可直接通过字符串字面量引用。"
      }
    },
    {
      "segment_id": "6648a219",
      "source_content": "```css title=\"/src/css/custom.css\"\n.purple-text {\n  color: rebeccapurple;\n}\n```",
      "source_content_hash": "79398e1f1e5ab94d6e520e010ee51b82b20bdc466ef37cbac855814ba921a8b4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_6648a219"
      }
    },
    {
      "segment_id": "4795a13d",
      "source_content": "```jsx\nfunction MyComponent() {\n  return (\n    <main>\n      <h1 className=\"purple-text\">Purple Heading!</h1>\n    </main>\n  );\n}\n```",
      "source_content_hash": "0cb57a5352d1053c369019476f404b87b47a1217804cae2cb82d087422553980",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_4795a13d"
      }
    },
    {
      "segment_id": "1131ef75",
      "source_content": "If you want to add CSS to any element, you can open the DevTools in your browser to inspect its class names. Class names come in several kinds:",
      "source_content_hash": "f7b7b452c4b205f45c1c82cd352ad27bbb5aa59057b99d9e1224a9cb6aec0a58",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要为元素添加CSS样式，可通过浏览器开发者工具查看其类名。类名主要分为以下几类："
      }
    },
    {
      "segment_id": "ea0c7bae",
      "source_content": "- **Theme class names**. These class names are listed exhaustively in [the next subsection](#theme-class-names). They don't have any default properties. You should always prioritize targeting those stable class names in your custom CSS.\n- **Infima class names**. These class names are found in the classic theme and usually follow the [BEM convention](http://getbem.com/naming/) of `block__element--modifier`. They are usually stable but are still considered implementation details, so you should generally avoid targeting them. However, you can [modify Infima CSS variables](#styling-your-site-with-infima).\n- **CSS module class names**. These class names have a hash in production (`codeBlockContainer_RIuc`) and are appended with a long file path in development. They are considered implementation details and you should almost always avoid targeting them in your custom CSS. If you must, you can use an [attribute selector](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors) (`[class*='codeBlockContainer']`) that ignores the hash.",
      "source_content_hash": "f16f6888760900aa81397fadb29db533c0f3f69b98cda8b6dee3212ecc231c79",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- **主题类名**：完整列表见[下节](#theme-class-names)。这些类名没有默认样式属性，在自定义CSS中应优先选用\n- **Infima类名**：经典主题中的类名通常遵循[BEM命名规范](http://getbem.com/naming/)，格式为`block__element--modifier`。虽然较稳定，但仍属实现细节，通常应避免直接引用（但可修改[Infima CSS变量](#styling-your-site-with-infima)）\n- **CSS模块类名**：生产环境带哈希值（如`codeBlockContainer_RIuc`），开发环境附带长文件路径。这些类名属于实现细节，几乎不应在自定义CSS中直接引用。必要时可使用[属性选择器](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors)（如`[class*='codeBlockContainer']`）忽略哈希部分"
      }
    },
    {
      "segment_id": "a5a4323e",
      "source_content": "### Theme Class Names {#theme-class-names}",
      "source_content_hash": "abffbd5e61b2447b5bb15713310f51ed1df82d4d393c9c843e631a285ce8fa18",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 主题类名 {#theme-class-names}"
      }
    },
    {
      "segment_id": "657c2b20",
      "source_content": "We provide some stable CSS class names for robust and maintainable global layout styling. These names are theme-agnostic and meant to be targeted by custom CSS.",
      "source_content_hash": "3cc826d0abe1a4311c352395904eb223392251fa6ea647e95975f81535dfa993",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "我们提供稳定的CSS类名用于健壮且可维护的全局布局样式。这些类名与主题无关，专为自定义CSS设计。"
      }
    },
    {
      "segment_id": "724adee0",
      "source_content": ":::tip\n\nIf you can't find a way to create a robust CSS selector, please [report your customization use-case](https://github.com/facebook/docusaurus/discussions/5468) and we will consider adding new class names.\n\n:::",
      "source_content_hash": "44dc39ef2763c4c7d019bcf2222e473af1fbd14c0cd37da0039570b6b62c015b",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n如果找不到合适的CSS选择器方案，请[提交您的定制需求](https://github.com/facebook/docusaurus/discussions/5468)，我们将评估是否添加新类名。\n\n:::"
      }
    },
    {
      "segment_id": "568a7359",
      "source_content": "<details>\n\n<summary>Exhaustive list of stable class names</summary>\n\nimport ThemeClassNamesCode from '!!raw-loader!@site/../packages/docusaurus-theme-common/src/utils/ThemeClassNames.ts';\nimport CodeBlock from '@theme/CodeBlock';\n\n<CodeBlock className=\"language-ts\">\n  {ThemeClassNamesCode\n    // remove source comments\n    .replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g,'')\n    .replace(/^ *\\n/gm,'')\n    .trim()}\n</CodeBlock>\n\n</details>",
      "source_content_hash": "1e3014fc400b85d286c567976513aaa28ff9d327e6b7c9981e17bea499634011",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_568a7359"
      }
    },
    {
      "segment_id": "f6b04a59",
      "source_content": "### Styling your site with Infima {#styling-your-site-with-infima}",
      "source_content_hash": "b1e87313047e513f513b8fdeb577cf1b4db1cef8e5192cadd5c3152b2d40c05c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 使用Infima定制站点样式 {#styling-your-site-with-infima}"
      }
    },
    {
      "segment_id": "a311e967",
      "source_content": "`@docusaurus/preset-classic` uses [Infima](https://infima.dev/) as the underlying styling framework. Infima provides a flexible layout and common UI components styling suitable for content-centric websites (blogs, documentation, landing pages). For more details, check out the [Infima website](https://infima.dev/).",
      "source_content_hash": "4391b87181dd99fd952c66337578b4dc0703d69dec7cc1398047e91c6e931f48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`@docusaurus/preset-classic`使用[Infima](https://infima.dev/)作为底层样式框架。该框架为内容型网站（博客、文档、落地页）提供灵活的布局和通用UI组件样式，详见[Infima官网](https://infima.dev/)。"
      }
    },
    {
      "segment_id": "eb51d107",
      "source_content": "When you scaffold your Docusaurus project with `create-docusaurus`, the website will be generated with basic Infima stylesheets and default styling. You can override Infima CSS variables globally.",
      "source_content_hash": "59fcb49c2a6de585fc20ddb8c0383c2fed86d1f37e16a3772abee501106b222c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "通过`create-docusaurus`创建项目时，网站会生成基础Infima样式表和默认样式。您可全局覆盖Infima CSS变量。"
      }
    },
    {
      "segment_id": "dc73c0d2",
      "source_content": "```css title=\"/src/css/custom.css\"\n:root {\n  --ifm-color-primary: #25c2a0;\n  --ifm-code-font-size: 95%;\n}\n```",
      "source_content_hash": "db842bed4a29790158850cb3c6233d1b3561c8c177311b97af7cede4a56c710b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_dc73c0d2"
      }
    },
    {
      "segment_id": "4be28ed1",
      "source_content": "Infima uses 7 shades of each color. We recommend using [ColorBox](https://www.colorbox.io/) to find the different shades of colors for your chosen primary color.",
      "source_content_hash": "623d297e71aad0e43e343f1eb119dc8b0f9ab91b27177f2f194a56d1c081dd91",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Infima为每种颜色提供7种色阶。推荐使用[ColorBox](https://www.colorbox.io/)工具获取主色调的对应色阶。"
      }
    },
    {
      "segment_id": "0e80209e",
      "source_content": "Alternatively, use the following tool to generate the different shades for your website and copy the variables into `/src/css/custom.css`.",
      "source_content_hash": "3a48f04c06f446854ad75a0de5a2801aba002900cca5d304448dcff9f3c78e3c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "或者，您也可以使用以下工具为网站生成不同色阶的变量，并将其复制到 `/src/css/custom.css` 文件中。"
      }
    },
    {
      "segment_id": "905803c8",
      "source_content": "<ColorGenerator />",
      "source_content_hash": "49d5c59188567c8fd7b77e699cb43105c6d911ed579dfb85a67e8cb0810f50c0",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_905803c8"
      }
    },
    {
      "segment_id": "8574d51c",
      "source_content": "### Dark Mode {#dark-mode}",
      "source_content_hash": "8030b22058fba91fee8fc28bd357be56c883635c7523d0b7e0e48c5f9f52cf97",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 深色模式 {#dark-mode}"
      }
    },
    {
      "segment_id": "e9313fef",
      "source_content": "In light mode, the `<html>` element has a `data-theme=\"light\"` attribute; in dark mode, it's `data-theme=\"dark\"`. Therefore, you can scope your CSS to dark-mode-only by targeting `html` with a specific attribute.",
      "source_content_hash": "af9ba08ca73159275b699dc9a8a33864c2ce6c6e1227f3d4fcbc2b9a90ecad15",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在浅色模式下，`<html>` 元素会带有 `data-theme=\"light\"` 属性；而在深色模式下则为 `data-theme=\"dark\"`。因此，您可以通过针对特定属性的 `html` 元素来限定 CSS 仅作用于深色模式。"
      }
    },
    {
      "segment_id": "342e4d80",
      "source_content": "```css\n/* Overriding root Infima variables */\n[data-theme='dark'] {\n  --ifm-color-primary: #4e89e8;\n}\n/* Styling one class specially in dark mode */\n[data-theme='dark'] .purple-text {\n  color: plum;\n}\n```",
      "source_content_hash": "d027104bd76b136ee9833af5e1a89d09dbf253ea2ca5fbe93503fd3e962bb4d0",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_342e4d80"
      }
    },
    {
      "segment_id": "168f82c4",
      "source_content": ":::tip\n\nIt is possible to initialize the Docusaurus theme directly from a `docusaurus-theme` query string parameter.\n\nExamples:\n\n- [`https://docusaurus.io/?docusaurus-theme=dark`](https://docusaurus.io/?docusaurus-theme=dark)\n- [`https://docusaurus.io/docs/configuration?docusaurus-theme=light`](https://docusaurus.io/docs/configuration?docusaurus-theme=light)\n\n:::",
      "source_content_hash": "8867af244fc6ed0cecf8f49469d29e24563ae7577fb00b991b02a03ff6f85dc0",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n您可以通过 `docusaurus-theme` 查询字符串参数直接初始化 Docusaurus 主题。\n\n示例：\n\n- [`https://docusaurus.io/?docusaurus-theme=dark`](https://docusaurus.io/?docusaurus-theme=dark)\n- [`https://docusaurus.io/docs/configuration?docusaurus-theme=light`](https://docusaurus.io/docs/configuration?docusaurus-theme=light)\n\n:::"
      }
    },
    {
      "segment_id": "c6868a9f",
      "source_content": "### Mobile View {#mobile-view}",
      "source_content_hash": "f9acc062388aa8aaf9b151b8500adda22a841ed27a4949ed13c56a7c11904107",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 移动端视图 {#mobile-view}"
      }
    },
    {
      "segment_id": "bb1346b6",
      "source_content": "Docusaurus uses `996px` as the cutoff between mobile screen width and desktop. If you want your layout to be different in the mobile view, you can use media queries.",
      "source_content_hash": "34eb4888722a09be2fffd27ab229785aafeb4e549a944124c45054f1598bce1f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 使用 `996px` 作为移动端屏幕宽度与桌面端的临界值。如果您希望在移动端视图中采用不同的布局，可以使用媒体查询。"
      }
    },
    {
      "segment_id": "8a061704",
      "source_content": "```css\n.banner {\n  padding: 4rem;\n}\n/** In mobile view, reduce the padding */\n@media screen and (max-width: 996px) {\n  .heroBanner {\n    padding: 2rem;\n  }\n}\n```",
      "source_content_hash": "b0d3cf1574b35ba35bf83f8d917586cd93852d6f7ec36efef198e753836f8e7c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_8a061704"
      }
    },
    {
      "segment_id": "55dc794c",
      "source_content": "## CSS modules {#css-modules}",
      "source_content_hash": "535d92668d5e80daa2cc64ffaa416c2faaffe487653d0e659dde97c9d0233aee",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## CSS 模块 {#css-modules}"
      }
    },
    {
      "segment_id": "63565425",
      "source_content": "To style your components using [CSS Modules](https://github.com/css-modules/css-modules), name your stylesheet files with the `.module.css` suffix (e.g. `welcome.module.css`). Webpack will load such CSS files as CSS modules and you have to reference the class names as properties of the imported CSS module (as opposed to using plain strings). This is similar to the convention used in [Create React App](https://facebook.github.io/create-react-app/docs/adding-a-css-modules-stylesheet).",
      "source_content_hash": "547984e8370f22923976eb475735d36e51e0092efb001b02e6a5b5b064f2e95b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要使用 [CSS 模块](https://github.com/css-modules/css-modules) 为组件添加样式，请将样式表文件命名为 `.module.css` 后缀（例如 `welcome.module.css`）。Webpack 会将这些 CSS 文件作为 CSS 模块加载，您需要将类名作为导入 CSS 模块的属性来引用（而不是使用纯字符串）。这与 [Create React App](https://facebook.github.io/create-react-app/docs/adding-a-css-modules-stylesheet) 中使用的约定类似。"
      }
    },
    {
      "segment_id": "e9921a93",
      "source_content": "```css title=\"styles.module.css\"\n.main {\n  padding: 12px;\n}\n\n.heading {\n  font-weight: bold;\n}\n\n.contents {\n  color: #ccc;\n}\n```",
      "source_content_hash": "be7a62411a52e50cfaa652d5db1edbfb7c9461f6cb19e56675b46ee9e8c8a44a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_e9921a93"
      }
    },
    {
      "segment_id": "ddf3de1d",
      "source_content": "```jsx\nimport styles from './styles.module.css';\n\nfunction MyComponent() {\n  return (\n    <main className={styles.main}>\n      <h1 className={styles.heading}>Hello!</h1>\n      <article className={styles.contents}>Lorem Ipsum</article>\n    </main>\n  );\n}\n```",
      "source_content_hash": "03b12817582a4c992efb7642a9bd767360538268b753cf3d28a5e4695e9773b4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_ddf3de1d"
      }
    },
    {
      "segment_id": "c8a6ab3e",
      "source_content": "The class names will be processed by webpack into a globally unique class name during build.",
      "source_content_hash": "add8b392df4836a18570c331a880a3abda97d2747287fbdcf1c761b049e7df6e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在构建过程中，Webpack 会将类名处理为全局唯一的类名。"
      }
    },
    {
      "segment_id": "e63d69ef",
      "source_content": "## CSS-in-JS {#css-in-js}",
      "source_content_hash": "4722dc268b701bc8b75519c9fdae3520cc63e4d8cc75fa7d7c8d105cf942ba9f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## CSS-in-JS {#css-in-js}"
      }
    },
    {
      "segment_id": "fe76c8d2",
      "source_content": ":::warning\n\nCSS-in-JS support is a work in progress, so libs like MUI may have display quirks. [Welcoming PRs](https://github.com/facebook/docusaurus/issues/1640).\n\n:::",
      "source_content_hash": "5dbc26d6d5ae1d2a2360644400e8b1eb0d3c742bfe834c6bc07600f8031a2e6c",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\nCSS-in-JS 的支持仍在开发中，因此像 MUI 这样的库可能会出现显示问题。[欢迎提交 PR](https://github.com/facebook/docusaurus/issues/1640)。\n\n:::"
      }
    },
    {
      "segment_id": "de588fa2",
      "source_content": "## Sass/SCSS {#sassscss}",
      "source_content_hash": "03603040ad88ad609c4207750febe79271792a346080e2c2410901d0849dc77c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Sass/SCSS {#sassscss}"
      }
    },
    {
      "segment_id": "3799844b",
      "source_content": "To use Sass/SCSS as your CSS preprocessor, install the unofficial Docusaurus 2 plugin [`docusaurus-plugin-sass`](https://github.com/rlamana/docusaurus-plugin-sass). This plugin works for both global styles and the CSS modules approach:",
      "source_content_hash": "b912764d1abd4aa9c58e1dd571313dda3a04f08b44da4242d586421aa8a6500d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要使用 Sass/SCSS 作为 CSS 预处理器，请安装非官方的 Docusaurus 2 插件 [`docusaurus-plugin-sass`](https://github.com/rlamana/docusaurus-plugin-sass)。该插件适用于全局样式和 CSS 模块方法："
      }
    },
    {
      "segment_id": "3bb47db3",
      "source_content": "1. Install [`docusaurus-plugin-sass`](https://github.com/rlamana/docusaurus-plugin-sass):",
      "source_content_hash": "95deb68fa67e4dffd5fb7292094349275b84207f1d8aa795305f0ebee37c15c2",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. 安装 [`docusaurus-plugin-sass`](https://github.com/rlamana/docusaurus-plugin-sass)："
      }
    },
    {
      "segment_id": "bb86adcb",
      "source_content": "```bash npm2yarn\nnpm install --save docusaurus-plugin-sass sass\n```",
      "source_content_hash": "043e7f6a1f7f8b4db11153e38f3484e2ab493884993a4e3e598d0baaec968b7e",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_bb86adcb"
      }
    },
    {
      "segment_id": "e73f1e25",
      "source_content": "2. Include the plugin in your `docusaurus.config.js` file:",
      "source_content_hash": "412f7d78735bc1f191f9a5c4a1c327d09cc1ccd3780f251d9578ec2d066ce0b1",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "2. 在 `docusaurus.config.js` 文件中包含该插件："
      }
    },
    {
      "segment_id": "a4a54521",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  // ...\n  // highlight-next-line\n  plugins: ['docusaurus-plugin-sass'],\n  // ...\n};\n```",
      "source_content_hash": "6c0d7389c704d93e479d706393410d320f01a1b2aff9fd0e0f64de797a035366",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_a4a54521"
      }
    },
    {
      "segment_id": "0d2c50e6",
      "source_content": "3. Write and import your stylesheets in Sass/SCSS as normal.",
      "source_content_hash": "99e49ff03e95e315af82657bae60bc27dcad2ed77615f0903a34e8b239181a2e",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "3. 正常编写并导入您的 Sass/SCSS 样式表。"
      }
    },
    {
      "segment_id": "3e795db3",
      "source_content": "### Global styles using Sass/SCSS {#global-styles-using-sassscss}",
      "source_content_hash": "f279e3eae6426e000c0994291975f5e5d9221c2c8662e66805ef0b0378ec89c5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 使用 Sass/SCSS 的全局样式 {#global-styles-using-sassscss}"
      }
    },
    {
      "segment_id": "5eedf0a1",
      "source_content": "You can now set the `customCss` property of `@docusaurus/preset-classic` to point to your Sass/SCSS file:",
      "source_content_hash": "cac0b4fd433e1cb09e87d66475941d62aa8dec82f4f70febf569288e9f2cb384",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现在，您可以将 `@docusaurus/preset-classic` 的 `customCss` 属性指向您的 Sass/SCSS 文件："
      }
    },
    {
      "segment_id": "93bf74a6",
      "source_content": "```js title=\"docusaurus.config.js\"\nmodule.exports = {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        // ...\n        theme: {\n          // highlight-next-line\n          customCss: [require.resolve('./src/css/custom.scss')],\n        },\n        // ...\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "db1244b9d04a2a6d3baf9fecd2be77555382459f5700d6dd6eff90ae140aa7c0",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_93bf74a6"
      }
    },
    {
      "segment_id": "c9f45ca3",
      "source_content": "### Modules using Sass/SCSS {#modules-using-sassscss}",
      "source_content_hash": "f2e114eb0d867e7068e7c20919cbe2542f7fe7f16b8efa5ef38a266f02513349",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 使用 Sass/SCSS 的模块 {#modules-using-sassscss}"
      }
    },
    {
      "segment_id": "f211c69a",
      "source_content": "Name your stylesheet files with the `.module.scss` suffix (e.g. `welcome.module.scss`) instead of `.css`. Webpack will use `sass-loader` to preprocess your stylesheets and load them as CSS modules.",
      "source_content_hash": "538e5a944e1616f9183d0cd91645b3e583933bd5c331b1cf1d56c8fdc13c3de8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "将样式表文件命名为 `.module.scss` 后缀（例如 `welcome.module.scss`）而不是 `.css`。Webpack 会使用 `sass-loader` 预处理您的样式表并将其作为 CSS 模块加载。"
      }
    },
    {
      "segment_id": "03859cae",
      "source_content": "```scss title=\"styles.module.scss\"\n.main {\n  padding: 12px;\n\n  article {\n    color: #ccc;\n  }\n}\n```",
      "source_content_hash": "a604cecb05964a850a0ba13890ba142bb55b18323a9963f0c0b10cb1e5279c95",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_03859cae"
      }
    },
    {
      "segment_id": "f4341a93",
      "source_content": "```jsx\nimport styles from './styles.module.scss';\n\nfunction MyComponent() {\n  return (\n    <main className={styles.main}>\n      <article>Lorem Ipsum</article>\n    </main>\n  );\n}\n```",
      "source_content_hash": "eb79854819ca020f2f00ad0c3c50873da9e6044ab7042ce364cc49442a43bfd0",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f4341a93"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-2.x/styling-layout.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.789290+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "79914c678bd928f01664af5f865fbf8dab6205a74649f8dd01ae2f3971f95a9b"
  }
}
