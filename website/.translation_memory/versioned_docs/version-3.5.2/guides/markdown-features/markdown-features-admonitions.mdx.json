{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-3.5.2/guides/markdown-features/markdown-features-admonitions.mdx",
  "source_file_content_hash": "6a698190eb2bf3fc95f0eaf9898dc523d54c0c62cbe0e7fdbf97e87549927028",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: admonitions\ndescription: Handling admonitions/callouts in Docusaurus Markdown\nslug: /markdown-features/admonitions\n---",
      "source_content_hash": "e3e10a679221e40b502f26665a65963c7eca3d6953244e6324ad3a0f48c279e4",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "a703643c",
      "source_content": "# Admonitions",
      "source_content_hash": "776568c0341245e2baae559785af689eedb73f94d760e67ede806c3114d43256",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 提示框"
      }
    },
    {
      "segment_id": "623f74e7",
      "source_content": "import BrowserWindow from '@site/src/components/BrowserWindow';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport Admonition from '@theme/Admonition';",
      "source_content_hash": "2f78cfe7ff3765d86bc6218239c27f4b327f19320be9e13a373cbadd8b375184",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_623f74e7"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "In addition to the basic Markdown syntax, we have a special admonitions syntax by wrapping text with a set of 3 colons, followed by a label denoting its type.",
      "source_content_hash": "fe26531ca601d79ba76c5552cf351c942b4dc61b02e4430741e5afad5042c529",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "除了基础Markdown语法外，我们通过用三组冒号包裹文本并附加类型标签的方式，提供特殊的提示框语法。"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "Example:",
      "source_content_hash": "872887e563e75957ffc20b021332504f2ddd0a8f3964cb93070863bfaf13cdad",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "示例："
      }
    },
    {
      "segment_id": "6e5ba8fb",
      "source_content": "```md\n:::note\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::tip\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::info\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::warning\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::danger\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n```",
      "source_content_hash": "95b9b16c4602791fca09fff960ff4a03ab35c90f37da73f81a3efbf416363b9a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_6e5ba8fb"
      }
    },
    {
      "segment_id": "ece60464",
      "source_content": "<BrowserWindow>\n\n:::note\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::tip\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::info\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::warning\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n:::danger\n\nSome **content** with _Markdown_ `syntax`. Check [this `api`](#).\n\n:::\n\n</BrowserWindow>",
      "source_content_hash": "7f25db3c074b970cbe36faadffe039599f6d2c2996b0bfb60f1d194da958a2c6",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_ece60464"
      }
    },
    {
      "segment_id": "a4bf4268",
      "source_content": "## Usage with Prettier {#usage-with-prettier}",
      "source_content_hash": "3526b8391fa730b11e817b023f300ed544ce2aa414739ef6cb807918e89aba28",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 与Prettier配合使用 {#usage-with-prettier}"
      }
    },
    {
      "segment_id": "ec619944",
      "source_content": "If you use [Prettier](https://prettier.io) to format your Markdown files, Prettier might auto-format your code to invalid admonition syntax. To avoid this problem, add empty lines around the starting and ending directives. This is also why the examples we show here all have empty lines around the content.",
      "source_content_hash": "34eb36a1291b112b1365366c71e2419908bcbf315711e9adb169da64ca2fcd05",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若使用[Prettier](https://prettier.io)格式化Markdown文件，其可能会将提示框语法自动格式化为无效形式。为避免此问题，请在起始和结束指令周围添加空行。这也是为什么我们展示的示例都在内容周围留有空白行。"
      }
    },
    {
      "segment_id": "f6563256",
      "source_content": "```md\n<!-- Prettier doesn't change this -->\n:::note\n\nHello world\n\n:::\n\n<!-- Prettier changes this -->\n:::note\nHello world\n:::\n\n<!-- to this -->\n::: note Hello world:::\n```",
      "source_content_hash": "c188d0531eea2d42a66a1c195406cf657ad4a5acf21313e0884d87a639625793",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f6563256"
      }
    },
    {
      "segment_id": "c7c92a79",
      "source_content": "## Specifying title {#specifying-title}",
      "source_content_hash": "486225fd54a22791b43fba1092132e10e761dac216c66663185b0670a6cab12c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 指定标题 {#specifying-title}"
      }
    },
    {
      "segment_id": "f0984c2a",
      "source_content": "You may also specify an optional title.",
      "source_content_hash": "e694620f81f0ae17501caf6cfe2f9b27b59d8a3a0fab97c10c34428d19e2ec08",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您还可以指定可选标题。"
      }
    },
    {
      "segment_id": "7ded566f",
      "source_content": "```md\n:::note[Your Title **with** some _Markdown_ `syntax`!]\n\nSome **content** with some _Markdown_ `syntax`.\n\n:::\n```",
      "source_content_hash": "986a7d4ea9afde24c0ccb692459b7affc263e67d69aa376fd1cb9fde41d6ab6f",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7ded566f"
      }
    },
    {
      "segment_id": "275cb688",
      "source_content": "<BrowserWindow>\n\n:::note[Your Title **with** some _Markdown_ `syntax`!]\n\nSome **content** with some _Markdown_ `syntax`.\n\n:::\n\n</BrowserWindow>",
      "source_content_hash": "ad2e80fbea43ccc3bc2bb09faac21a87ca424e4d10e48bd5e16dfe5fe336c825",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_275cb688"
      }
    },
    {
      "segment_id": "36d6c3de",
      "source_content": "## Nested admonitions {#nested-admonitions}",
      "source_content_hash": "a141ce3460642f13de7a05a080e23b85b5af637dd486649aa4758d36ee3e0e60",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 嵌套提示框 {#nested-admonitions}"
      }
    },
    {
      "segment_id": "c364340c",
      "source_content": "Admonitions can be nested. Use more colons `:` for each parent admonition level.",
      "source_content_hash": "84d6f3a5d5e4d47c9b5ccc99466353e5318173da002de643b14aae638cb27a1a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "提示框支持嵌套。每层父级提示框需使用更多冒号`:`表示层级关系。"
      }
    },
    {
      "segment_id": "b474abd5",
      "source_content": "```md\n:::::info[Parent]\n\nParent content\n\n::::danger[Child]\n\nChild content\n\n:::tip[Deep Child]\n\nDeep child content\n\n:::\n\n::::\n\n:::::\n```",
      "source_content_hash": "707e3f61a540c147d5330becccd40917d82bfd697e0f546fa3171bf809c835bf",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b474abd5"
      }
    },
    {
      "segment_id": "9e0ba9d0",
      "source_content": "<BrowserWindow>\n\n:::::info[Parent]\n\nParent content\n\n::::danger[Child]\n\nChild content\n\n:::tip[Deep Child]\n\nDeep child content\n\n:::\n\n::::\n\n:::::\n\n</BrowserWindow>",
      "source_content_hash": "5370ccda3a9181270486fd2eeafa01aba71831d42c6b821a79b25eeaa1d0854e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_9e0ba9d0"
      }
    },
    {
      "segment_id": "191265da",
      "source_content": "## Admonitions with MDX {#admonitions-with-mdx}",
      "source_content_hash": "4b0f8af36529c3e38174f00aaf311bf0f84e14aa160fbcc587cc553abac64d8c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 在MDX中使用提示框 {#admonitions-with-mdx}"
      }
    },
    {
      "segment_id": "85ea22dd",
      "source_content": "You can use MDX inside admonitions too!",
      "source_content_hash": "3e054c0f62b5d98ea88bfce5215a02aad0d84d485e4e9876c4cc8ec31d529a6e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您也可以在提示框内使用MDX语法！"
      }
    },
    {
      "segment_id": "9bc650e1",
      "source_content": "```jsx\nimport Tabs from '@theme/Tabs';\n\nimport TabItem from '@theme/TabItem';\n\n:::tip[Use tabs in admonitions]\n\n<Tabs>\n  <TabItem value=\"apple\" label=\"Apple\">This is an apple 🍎</TabItem>\n  <TabItem value=\"orange\" label=\"Orange\">This is an orange 🍊</TabItem>\n  <TabItem value=\"banana\" label=\"Banana\">This is a banana 🍌</TabItem>\n</Tabs>\n\n:::\n```",
      "source_content_hash": "aa701904e707937e7c1b82d14d06de3c9cb96504bc6229036096646cae439f89",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_9bc650e1"
      }
    },
    {
      "segment_id": "086935f3",
      "source_content": "<BrowserWindow>\n\n:::tip[Use tabs in admonitions]\n\n<Tabs>\n  <TabItem value=\"apple\" label=\"Apple\">This is an apple 🍎</TabItem>\n  <TabItem value=\"orange\" label=\"Orange\">This is an orange 🍊</TabItem>\n  <TabItem value=\"banana\" label=\"Banana\">This is a banana 🍌</TabItem>\n</Tabs>\n\n:::\n\n</BrowserWindow>",
      "source_content_hash": "1bff4ee91a56ddf783f9bfc762cada6ce318824cd89598c12fb518c296c4f6d1",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_086935f3"
      }
    },
    {
      "segment_id": "778e087a",
      "source_content": "## Usage in JSX {#usage-in-jsx}",
      "source_content_hash": "356d216a51952d4207c921c3a4b4726992382e086b1be3e36022995eefa24657",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 在JSX中使用 {#usage-in-jsx}"
      }
    },
    {
      "segment_id": "90c4b96b",
      "source_content": "Outside of Markdown, you can use the `@theme/Admonition` component to get the same output.",
      "source_content_hash": "ad154d430298d0d1b93fa1fc57660bb43e170337e18876c2459fdc9b8922fbc6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在Markdown之外，您可以使用`@theme/Admonition`组件获得相同的输出效果。"
      }
    },
    {
      "segment_id": "f377fafa",
      "source_content": "```jsx title=\"MyReactPage.jsx\"\nimport Admonition from '@theme/Admonition';\n\nexport default function MyReactPage() {\n  return (\n    <div>\n      <Admonition type=\"info\">\n        <p>Some information</p>\n      </Admonition>\n    </div>\n  );\n}\n```",
      "source_content_hash": "3dc40e4bebcca15d95169db73e9bbb440722e85f506e450599463f08d8db6f9b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f377fafa"
      }
    },
    {
      "segment_id": "61e5dad6",
      "source_content": "The types that are accepted are the same as above: `note`, `tip`, `danger`, `info`, `warning`. Optionally, you can specify an icon by passing a JSX element or a string, or a title:",
      "source_content_hash": "afc27b778816ce5500416e45196db3bd8921b5d8d7b8adbbe59230ceafcb9520",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "接受的类型与上文相同：`note`、`tip`、`danger`、`info`、`warning`。可选地，您可以通过传递JSX元素、字符串或标题来指定图标："
      }
    },
    {
      "segment_id": "18e3e63d",
      "source_content": "```jsx title=\"MyReactPage.jsx\"\n<Admonition type=\"tip\" icon=\"💡\" title=\"Did you know...\">\n  Use plugins to introduce shorter syntax for the most commonly used JSX\n  elements in your project.\n</Admonition>\n```",
      "source_content_hash": "71bec46bde592e7f21a8aa7b79b59a6e78ff1f038728706ef21b88e407857a57",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_18e3e63d"
      }
    },
    {
      "segment_id": "8750c0b5",
      "source_content": "<BrowserWindow>\n  <Admonition type=\"tip\" icon=\"💡\" title=\"Did you know...\">\n    Use plugins to introduce shorter syntax for the most commonly used JSX\n    elements in your project.\n  </Admonition>\n</BrowserWindow>",
      "source_content_hash": "14fd9736bf1ccd29e2b5ff0d2958dbeaf01881d227a1928342ef9eaf09f9a1fc",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_8750c0b5"
      }
    },
    {
      "segment_id": "2f833a4d",
      "source_content": "## Customizing admonitions {#customizing-admonitions}",
      "source_content_hash": "18c352506bd83fc14793fc5d17813a1e8ff114a8afb3ccc51e17e64fc3a4ac25",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 自定义提示框 {#customizing-admonitions}"
      }
    },
    {
      "segment_id": "dfb6fc67",
      "source_content": "There are two kinds of customizations possible with admonitions: **parsing** and **rendering**.",
      "source_content_hash": "9d4684515ed35a0274b7f3af90745e98f761db942ead0ddbe93a53954a93dd65",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "提示框支持两种自定义方式：**解析**和**渲染**。"
      }
    },
    {
      "segment_id": "a9950191",
      "source_content": "### Customizing rendering behavior {#customizing-rendering-behavior}",
      "source_content_hash": "1dab407f67dc1021b60831d77c98ba0ca9d6c5336f507958297b29415faad586",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 自定义渲染行为 {#customizing-rendering-behavior}"
      }
    },
    {
      "segment_id": "d3f13bf4",
      "source_content": "You can customize how each individual admonition type is rendered through [swizzling](../../swizzling.mdx). You can often achieve your goal through a simple wrapper. For example, in the follow example, we swap out the icon for `info` admonitions only.",
      "source_content_hash": "9968dfac6152ccbcc652e0ef270824c89a1b0966dd64dc8b9c1c5fa1d5886dee",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以通过[swizzling](../../swizzling.mdx)自定义每种提示框类型的渲染方式。通常通过简单包装即可实现目标。例如在下述示例中，我们仅替换了`info`类型提示框的图标。"
      }
    },
    {
      "segment_id": "9eaa3064",
      "source_content": "```jsx title=\"src/theme/Admonition.js\"\nimport React from 'react';\nimport Admonition from '@theme-original/Admonition';\nimport MyCustomNoteIcon from '@site/static/img/info.svg';\n\nexport default function AdmonitionWrapper(props) {\n  if (props.type !== 'info') {\n    return <Admonition title=\"My Custom Admonition Title\" {...props} />;\n  }\n  return <Admonition icon={<MyCustomNoteIcon />} {...props} />;\n}\n```",
      "source_content_hash": "1227044486a7ae56adbd99507ab154aed6141169cdb6b184e157e746ee2fb1da",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_9eaa3064"
      }
    },
    {
      "segment_id": "90032345",
      "source_content": "### Customizing parsing behavior {#customizing-parsing-behavior}",
      "source_content_hash": "939f1d9718cdafd8bd60b1b0ad2a71daea6b9cfbd1d47764983c526ba464ad2a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 自定义解析行为 {#customizing-parsing-behavior}"
      }
    },
    {
      "segment_id": "715a86e2",
      "source_content": "Admonitions are implemented with a [Remark plugin](./markdown-features-plugins.mdx). The plugin is designed to be configurable. To customize the Remark plugin for a specific content plugin (docs, blog, pages), pass the options through the `admonitions` key.",
      "source_content_hash": "b9c6075cb89d7166dd5169644b9a8b71354696fe8fbfe056da5cd376592695b9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "提示框功能通过[Remark插件](./markdown-features-plugins.mdx)实现。该插件设计为可配置模式。要为特定内容插件（文档、博客、页面）自定义Remark插件，需通过`admonitions`键传递配置项。"
      }
    },
    {
      "segment_id": "48340a8d",
      "source_content": "```js title=\"docusaurus.config.js\"\nexport default {\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          admonitions: {\n            keywords: ['note', 'tip', 'info', 'warning', 'danger'],\n            extendDefaults: true,\n          },\n        },\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "6519ab59e35bee34e3657d05c67e9f05e8a8305bb5792cb7b243aa5dd0c335aa",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_48340a8d"
      }
    },
    {
      "segment_id": "740d2e67",
      "source_content": "The plugin accepts the following options:",
      "source_content_hash": "ca4abfd4f6e654257bc1736de074d641a658b591f777f98282fb7400dfe438be",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "插件接受以下配置项："
      }
    },
    {
      "segment_id": "9de5fef5",
      "source_content": "- `keywords`: An array of keywords that can be used as the type for the admonition.\n- `extendDefaults`: Should the provided options (such as `keywords`) be merged into the existing defaults. Defaults to `true`.",
      "source_content_hash": "48ee3d451314b4ef493f9860437c5bdf82bccf987cb4cd3269036871d8ba59a1",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- `keywords`：可作为提示框类型使用的关键词数组\n- `extendDefaults`：是否将提供的配置项（如`keywords`）与现有默认值合并。默认为`true`"
      }
    },
    {
      "segment_id": "aa705b4d",
      "source_content": "The `keyword` will be passed as the `type` prop of the `Admonition` component.",
      "source_content_hash": "6ff5c019c4549df00915b717f2434872755423c1141876719aa33804fff8b604",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`keyword`将作为`type`属性传递给`Admonition`组件。"
      }
    },
    {
      "segment_id": "f996c0b9",
      "source_content": "### Custom admonition type components {#custom-admonition-type-components}",
      "source_content_hash": "77b76ac4ca04108e91bc0a9140ccff3f5f1ddaa1aa414acfea85776d25ac2cd5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 自定义提示框类型组件 {#custom-admonition-type-components}"
      }
    },
    {
      "segment_id": "4e994fc3",
      "source_content": "By default, the theme doesn't know what do to with custom admonition keywords such as `:::my-custom-admonition`. It is your responsibility to map each admonition keyword to a React component so that the theme knows how to render them.",
      "source_content_hash": "32ab99fced3d3460183c021235930f8655ee09477c304ff5d9ceddb704209f60",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "默认情况下，主题不知道如何处理如`:::my-custom-admonition`这类自定义提示框关键词。您需要将每个提示框关键词映射到React组件，以便主题知道如何渲染它们。"
      }
    },
    {
      "segment_id": "60e22db4",
      "source_content": "If you registered a new admonition type `my-custom-admonition` via the following config:",
      "source_content_hash": "169932100625ead4ef4fdbc0a596926b55182910ed3432bbb276d8e1d69317d3",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若您通过以下配置注册了新提示框类型`my-custom-admonition`："
      }
    },
    {
      "segment_id": "d0a5d100",
      "source_content": "```js title=\"docusaurus.config.js\"\nexport default {\n  // ...\n  presets: [\n    [\n      'classic',\n      {\n        // ...\n        docs: {\n          admonitions: {\n            keywords: ['my-custom-admonition'],\n            extendDefaults: true,\n          },\n        },\n      },\n    ],\n  ],\n};\n```",
      "source_content_hash": "bee015a489eb30612bc9b13274a8642b57badc613d99cb0d584a9bc337c6e439",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_d0a5d100"
      }
    },
    {
      "segment_id": "2e76bd58",
      "source_content": "You can provide the corresponding React component for `:::my-custom-admonition` by creating the following file (unfortunately, since it's not a React component file, it's not swizzlable):",
      "source_content_hash": "d01218ad3bbed60be6cd6064c1684e8748b50f08215707bbbe6a7c7a75a50436",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以通过创建以下文件来为 `:::my-custom-admonition` 提供对应的 React 组件（遗憾的是，由于这不是 React 组件文件，因此无法通过 swizzle 机制生成）："
      }
    },
    {
      "segment_id": "b237f77e",
      "source_content": "```js title=\"src/theme/Admonition/Types.js\"\nimport React from 'react';\nimport DefaultAdmonitionTypes from '@theme-original/Admonition/Types';\n\nfunction MyCustomAdmonition(props) {\n  return (\n    <div style={{border: 'solid red', padding: 10}}>\n      <h5 style={{color: 'blue', fontSize: 30}}>{props.title}</h5>\n      <div>{props.children}</div>\n    </div>\n  );\n}\n\nconst AdmonitionTypes = {\n  ...DefaultAdmonitionTypes,\n\n  // Add all your custom admonition types here...\n  // You can also override the default ones if you want\n  'my-custom-admonition': MyCustomAdmonition,\n};\n\nexport default AdmonitionTypes;\n```",
      "source_content_hash": "8fdaa1828716d508b67d009bbe5819bbb96462979575301591aa7827e9b913af",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b237f77e"
      }
    },
    {
      "segment_id": "6c135b48",
      "source_content": "Now you can use your new admonition keyword in a Markdown file, and it will be parsed and rendered with your custom logic:",
      "source_content_hash": "630a65227a7470c2ce2fe462ed1c7bf492d07c2f4b83ca2fbaa6ee5103985ceb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现在您可以在 Markdown 文件中使用新的告示关键词，它将通过您的自定义逻辑进行解析和渲染："
      }
    },
    {
      "segment_id": "7867f12c",
      "source_content": "```md\n:::my-custom-admonition[My Title]\n\nIt works!\n\n:::\n```",
      "source_content_hash": "f14d3faa910b7dac279aeb8c2feea4323a24c16817ce6912def12fb10321c5b8",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7867f12c"
      }
    },
    {
      "segment_id": "893577ee",
      "source_content": "<BrowserWindow>\n\n:::my-custom-admonition[My Title]\n\nIt works!\n\n:::\n\n</BrowserWindow>",
      "source_content_hash": "951393f8feaec365b19ba4b2cbdffad802682c78cdbdf7010794df5e889ffd50",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_893577ee"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-3.5.2/guides/markdown-features/markdown-features-admonitions.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.926701+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "6a698190eb2bf3fc95f0eaf9898dc523d54c0c62cbe0e7fdbf97e87549927028"
  }
}