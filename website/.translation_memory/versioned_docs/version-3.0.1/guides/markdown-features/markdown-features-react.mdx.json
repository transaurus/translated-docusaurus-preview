{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-3.0.1/guides/markdown-features/markdown-features-react.mdx",
  "source_file_content_hash": "6caeccf5206d3daf7fbe4fad5d909aeac688142352b2202480eddc36b381e25a",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nid: react\ndescription: Using the power of React in Docusaurus Markdown documents, thanks to MDX\nslug: /markdown-features/react\n---",
      "source_content_hash": "b1cc7f57751ebf4370d2ec697c7513f4afcc908565e48a73d2a32b56b0723af4",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "a703643c",
      "source_content": "# MDX and React",
      "source_content_hash": "b410271908ead2c4b9f0b2a329ab56864cbc206eb19d795742d0e3dbfb94de8c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# MDX 与 React"
      }
    },
    {
      "segment_id": "623f74e7",
      "source_content": "import BrowserWindow from '@site/src/components/BrowserWindow';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport styles from './markdown-features-react.module.css';",
      "source_content_hash": "c2ae562eb20dd85a05fa547c254518ff1bbdde316f7be0caec70e42d4a06b25f",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_623f74e7"
      }
    },
    {
      "segment_id": "ad8fd492",
      "source_content": "Docusaurus has built-in support for [MDX](https://mdxjs.com/), which allows you to write JSX within your Markdown files and render them as React components.",
      "source_content_hash": "901acff869f10be04c9de33d95cd633219a1f72f246c2dd6f38198bfbe8e1758",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus 内置支持 [MDX](https://mdxjs.com/)，允许您在 Markdown 文件中编写 JSX 并将其渲染为 React 组件。"
      }
    },
    {
      "segment_id": "86b54d44",
      "source_content": "Check out the [MDX docs](https://mdxjs.com/) to see what fancy stuff you can do with MDX.",
      "source_content_hash": "9f22a99735b592812cc25e8122d32908e3b7a844b357694e83dcac5ceb3f434e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "查看 [MDX 文档](https://mdxjs.com/) 了解您能用 MDX 实现哪些高级功能。"
      }
    },
    {
      "segment_id": "440191a5",
      "source_content": ":::tip[Debugging MDX]\n\nThe MDX format is quite strict, and you may get compilation errors.\n\nUse the **[MDX playground](https://mdxjs.com/playground/)** to debug them and make sure your syntax is valid.\n\n:::",
      "source_content_hash": "10c59da315cc59b7455667b49a68fa50d3778a451f7316aaf71efe8c855802ef",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip[调试 MDX]\n\nMDX 格式非常严格，您可能会遇到编译错误。\n\n使用 **[MDX 交互式演示](https://mdxjs.com/playground/)** 进行调试，确保语法正确。\n\n:::"
      }
    },
    {
      "segment_id": "79b2d0b9",
      "source_content": "### Exporting components {#exporting-components}",
      "source_content_hash": "7d33dd9bfe1deb7124619ea9dd405757a0ce08248635b3f2c022f240d2da89e1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 导出组件 {#exporting-components}"
      }
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "To define any custom component within an MDX file, you have to export it: only paragraphs that start with `export` will be parsed as components instead of prose.",
      "source_content_hash": "0f698510a82252911502143f8a1726162bb05baf0435c41aef89fabaa45267da",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要在 MDX 文件中定义自定义组件，必须使用 `export` 导出：只有以 `export` 开头的段落才会被解析为组件而非普通文本。"
      }
    },
    {
      "segment_id": "b7c3dbd1",
      "source_content": "```jsx\nexport const Highlight = ({children, color}) => (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '2px',\n      color: '#fff',\n      padding: '0.2rem',\n    }}>\n    {children}\n  </span>\n);\n\n<Highlight color=\"#25c2a0\">Docusaurus green</Highlight> and <Highlight color=\"#1877F2\">Facebook blue</Highlight> are my favorite colors.\n\nI can write **Markdown** alongside my _JSX_!\n```",
      "source_content_hash": "c2933edc993e0df2a3798440fda265c271086aa2a745f951752f7179a0d277d4",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b7c3dbd1"
      }
    },
    {
      "segment_id": "a9d49f92",
      "source_content": "Notice how it renders both the markup from your React component and the Markdown syntax:",
      "source_content_hash": "75e2e85bb4c1245854a148ee0e635f32317af19d42f1d68b163a487d06d8a370",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "请注意它如何同时渲染 React 组件的标记和 Markdown 语法："
      }
    },
    {
      "segment_id": "b76063f4",
      "source_content": "export const Highlight = ({children, color}) => (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '2px',\n      color: '#fff',\n      padding: '0.2rem',\n    }}>\n    {children}\n  </span>\n);",
      "source_content_hash": "3ae6d1582008d8ad8847a067af269b2514dd915ab759aa6514ebe8fc8085b624",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b76063f4"
      }
    },
    {
      "segment_id": "96e9ed17",
      "source_content": "<BrowserWindow minHeight={240}>\n\n<><Highlight color=\"#25c2a0\">Docusaurus green</Highlight>\n{` `}and <Highlight color=\"#1877F2\">Facebook blue</Highlight> are my favorite colors.</>\n\nI can write **Markdown** alongside my _JSX_!\n\n</BrowserWindow>",
      "source_content_hash": "942f0c620380ad8a6408fc5c60715a08deb6a95df751afe3d30dc1ec5a023e78",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_96e9ed17"
      }
    },
    {
      "segment_id": "724adee0",
      "source_content": ":::warning[MDX is JSX]\n\nSince all doc files are parsed using MDX, anything that looks like HTML is actually JSX. Therefore, if you need to inline-style a component, follow JSX flavor and provide style objects.\n\n{/* prettier-ignore */}\n```jsx\n/* Instead of this: */\n<span style=\"background-color: red\">Foo</span>\n/* Use this: */\n<span style={{backgroundColor: 'red'}}>Foo</span>\n```\n\n:::",
      "source_content_hash": "73facb61daa5bdacc23d7ea5455aadf39993bdd393cc525dc5d0cb13179841e3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning[MDX 即 JSX]\n\n由于所有文档文件都使用 MDX 解析，任何看似 HTML 的内容实际上都是 JSX。因此，如果需要内联样式组件，请遵循 JSX 规范并使用样式对象。\n\n{/* prettier-ignore */}\n```jsx\n/* 不要这样写： */\n<span style=\"background-color: red\">Foo</span>\n/* 应该这样写： */\n<span style={{backgroundColor: 'red'}}>Foo</span>\n```\n\n:::"
      }
    },
    {
      "segment_id": "0a103a02",
      "source_content": "### Importing components {#importing-components}",
      "source_content_hash": "bc824d9a4f56eee7f45fc3dbd6702aa4f4ccdc79c655e3c24fa8675e813eb2dd",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 导入组件 {#importing-components}"
      }
    },
    {
      "segment_id": "8126f763",
      "source_content": "You can also import your own components defined in other files or third-party components installed via npm.",
      "source_content_hash": "ef63ebfa9aab8c339ea47dbb33bda302d9671ce0d127be22a7c0901eead14ff9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您还可以导入其他文件中定义的自定义组件，或通过 npm 安装的第三方组件。"
      }
    },
    {
      "segment_id": "7d898a0e",
      "source_content": "```md\n<!-- Docusaurus theme component -->\nimport TOCInline from '@theme/TOCInline';\n<!-- External component -->\nimport Button from '@mui/material/Button';\n<!-- Custom component -->\nimport BrowserWindow from '@site/src/components/BrowserWindow';\n```",
      "source_content_hash": "8f90ee8934116a7aef9d67437b8b5cb1ab0803c52222274729eef31d64a244e6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_7d898a0e"
      }
    },
    {
      "segment_id": "9c85eea9",
      "source_content": ":::tip\n\nThe `@site` alias points to your website's directory, usually where the `docusaurus.config.js` file is. Using an alias instead of relative paths (`'../../src/components/BrowserWindow'`) saves you from updating import paths when moving files around, or when [versioning docs](../docs/versioning.mdx) and [translating](../../i18n/i18n-tutorial.mdx).\n\n:::",
      "source_content_hash": "34572f63b34602760244ab20e30f43e8c49b05099d3a9ac78d3ea206ad233c33",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n`@site` 别名指向您网站的目录（通常包含 `docusaurus.config.js` 文件）。使用别名而非相对路径（如 `'../../src/components/BrowserWindow'`）可以避免在移动文件或进行[文档版本控制](../docs/versioning.mdx)和[国际化翻译](../../i18n/i18n-tutorial.mdx)时修改导入路径。\n\n:::"
      }
    },
    {
      "segment_id": "2838eb68",
      "source_content": "While declaring components within Markdown is very convenient for simple cases, it becomes hard to maintain because of limited editor support, risks of parsing errors, and low reusability. Use a separate `.js` file when your component involves complex JS logic:",
      "source_content_hash": "76070d14b1ca7d3d2e71d6e1039f0c916803f65daaa1a17f9411d9c28010fb7c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "虽然在 Markdown 中声明组件对简单场景非常方便，但由于编辑器支持有限、存在解析错误风险且可复用性低，难以维护复杂逻辑。当组件涉及复杂 JS 逻辑时，请使用单独的 `.js` 文件："
      }
    },
    {
      "segment_id": "de26f08a",
      "source_content": "```jsx title=\"src/components/Highlight.js\"\nimport React from 'react';\n\nexport default function Highlight({children, color}) {\n  return (\n    <span\n      style={{\n        backgroundColor: color,\n        borderRadius: '2px',\n        color: '#fff',\n        padding: '0.2rem',\n      }}>\n      {children}\n    </span>\n  );\n}\n```",
      "source_content_hash": "9cd71282eb66d26e382e351edd7e3121567497a1e0f9682d346363d5d8d4785a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_de26f08a"
      }
    },
    {
      "segment_id": "3917a88d",
      "source_content": "```md title=\"markdown-file.mdx\"\nimport Highlight from '@site/src/components/Highlight';\n\n<Highlight color=\"#25c2a0\">Docusaurus green</Highlight>\n```",
      "source_content_hash": "f1835a5f5cd34c8a34ef4058195da73ea5643cbbcdcb98c026baafe959c7cec2",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_3917a88d"
      }
    },
    {
      "segment_id": "5d8b9012",
      "source_content": ":::tip\n\nIf you use the same component across a lot of files, you don't need to import it everywhere—consider adding it to the global scope. [See below](#mdx-component-scope)\n\n:::",
      "source_content_hash": "83e3417c800624d79543f1266aaa422117201bc8b818b3047074dc6d416ef495",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n如果某个组件在多个文件中重复使用，无需每次都导入——可将其添加到全局作用域。[详见下文](#mdx-component-scope)\n\n:::"
      }
    },
    {
      "segment_id": "a461a67b",
      "source_content": "### MDX component scope {#mdx-component-scope}",
      "source_content_hash": "d65d067ec299b9d28ced49e7a200df9b921086f95e1d538b66dc7a10fb8adc1c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### MDX 组件作用域 {#mdx-component-scope}"
      }
    },
    {
      "segment_id": "e77cf7c6",
      "source_content": "Apart from [importing a component](#importing-components) and [exporting a component](#exporting-components), a third way to use a component in MDX is to **register it to the global scope**, which will make it automatically available in every MDX file, without any import statements.",
      "source_content_hash": "6ac576a81d6e5c26a56749bbc9d07490ec1db01cdf1ea51c7be26d71b43d8653",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "除了[导入组件](#importing-components)和[导出组件](#exporting-components)外，第三种在 MDX 中使用组件的方式是**将其注册到全局作用域**，这样无需导入语句即可在所有 MDX 文件中自动使用。"
      }
    },
    {
      "segment_id": "bb1346b6",
      "source_content": "For example, given this MDX file:",
      "source_content_hash": "c23f682f7d31919f15ee7b2b0fbfecd63e6757aa35f8899d58324a70976c07f5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "例如给定以下 MDX 文件："
      }
    },
    {
      "segment_id": "8a061704",
      "source_content": "```md\n- a\n- list!\n\nAnd some <Highlight>custom markup</Highlight>...\n```",
      "source_content_hash": "defed103d21743e341bfdf136473fa75ef11b7ba6fddcafd9566933e32f374a9",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_8a061704"
      }
    },
    {
      "segment_id": "17b50e81",
      "source_content": "It will be compiled to a React component containing `ul`, `li`, `p`, and `Highlight` elements. `Highlight` is not a native html element: you need to provide your own React component implementation for it.",
      "source_content_hash": "4c2eb6024e2f87f66d90ff8f9b60a38743d2195ba7ab14a0a658f3c97e303913",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "它将被编译为包含 `ul`、`li`、`p` 和 `Highlight` 元素的 React 组件。`Highlight` 不是原生 HTML 元素：您需要为其提供自己的 React 组件实现。"
      }
    },
    {
      "segment_id": "719d3997",
      "source_content": "In Docusaurus, the MDX component scope is provided by the `@theme/MDXComponents` file. It's not a React component, _per se_, unlike most other exports under the `@theme/` alias: it is a record from tag names like `Highlight` to their React component implementations.",
      "source_content_hash": "d6f9f281431e213e04a27be493e2bf98a6217aa7ae3f15412cc79620d66f3470",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在 Docusaurus 中，MDX 组件作用域由 `@theme/MDXComponents` 文件提供。与 `@theme/` 别名下的大多数导出不同，它本身不是 React 组件，而是一个从标签名（如 `Highlight`）到对应 React 组件实现的映射表。"
      }
    },
    {
      "segment_id": "42d9ca67",
      "source_content": "If you [swizzle](../../swizzling.mdx) this component, you will find all tags that have been implemented, and you can further customize our implementation by swizzling the respective sub-component, like `@theme/MDXComponents/Code` (which is used to render [Markdown code blocks](./markdown-features-code-blocks.mdx)).",
      "source_content_hash": "f3b5b8be2482d6f135ea12ec67f7aacf28b7732802c59f0f686939bd1614b3ea",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "如果您[混写（swizzle）](../../swizzling.mdx)该组件，您会发现所有已实现的标签，并可以通过混写相应的子组件（如用于渲染[Markdown代码块](./markdown-features-code-blocks.mdx)的`@theme/MDXComponents/Code`）进一步自定义我们的实现。"
      }
    },
    {
      "segment_id": "619c3209",
      "source_content": "If you want to register extra tag names (like the `<Highlight>` tag above), you should consider [wrapping `@theme/MDXComponents`](../../swizzling.mdx#wrapping), so you don't have to maintain all the existing mappings. Since the swizzle CLI doesn't allow wrapping non-component files yet, you should manually create the wrapper:",
      "source_content_hash": "1adf742c87b5f5714046135fe8f39938d832e098482859fe57e757b2882a0879",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若需注册额外标签（如上述`<Highlight>`标签），建议[包装`@theme/MDXComponents`](../../swizzling.mdx#wrapping)，这样无需维护所有现有映射关系。由于混写CLI尚不支持包装非组件文件，您需要手动创建包装器："
      }
    },
    {
      "segment_id": "9129c0c5",
      "source_content": "```js title=\"src/theme/MDXComponents.js\"\nimport React from 'react';\n// Import the original mapper\nimport MDXComponents from '@theme-original/MDXComponents';\n// highlight-next-line\nimport Highlight from '@site/src/components/Highlight';\n\nexport default {\n  // Re-use the default mapping\n  ...MDXComponents,\n  // Map the \"<Highlight>\" tag to our Highlight component\n  // `Highlight` will receive all props that were passed to `<Highlight>` in MDX\n  // highlight-next-line\n  Highlight,\n};\n```",
      "source_content_hash": "419ae06b1c02c957cccdc64137aefd855ddad9681fc4f43cd56f99c613419677",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "89cf7bac",
      "source_content": "And now, you can freely use `<Highlight>` in every page, without writing the import statement:",
      "source_content_hash": "cd681037a386f4310a640359bf24debba0db95999736c9464f98841bb5ea6c98",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现在，您无需编写导入语句即可在所有页面自由使用`<Highlight>`："
      }
    },
    {
      "segment_id": "31b98214",
      "source_content": "```md\nI can conveniently use <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> everywhere!\n```",
      "source_content_hash": "c9b05e685637b0829bcfe7e961ba5074489ba12f47b9d806477d087685552b8b",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "fd5b05a2",
      "source_content": "<BrowserWindow>\n\nI can conveniently use <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> everywhere!\n\n</BrowserWindow>",
      "source_content_hash": "fee3481d206faf6cb4f9fd55d4811c6b681e6de71bfca2f4f90af6cc870c9b04",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "df411793",
      "source_content": ":::warning\n\nWe use **upper-case** tag names like `Highlight` on purpose.\n\nFrom MDX v3+ onward (Docusaurus v3+), lower-case tag names are always rendered as native html elements, and will not use any component mapping you provide.\n\n:::",
      "source_content_hash": "8940347a8710ac2e5885081874a4efc741d1a2abe6981675cfd496b53c323384",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n我们**刻意使用大写**标签名如`Highlight`。\n\n从MDX v3+开始（Docusaurus v3+），小写标签名始终会被渲染为原生HTML元素，不会使用您提供的任何组件映射。\n\n:::"
      }
    },
    {
      "segment_id": "61a348bf",
      "source_content": ":::warning\n\nThis feature is powered by [an `MDXProvider`](https://mdxjs.com/docs/using-mdx/#mdx-provider). If you are importing Markdown in a React page, you have to supply this provider yourself through the `MDXContent` theme component.\n\n```jsx title=\"src/pages/index.js\"\nimport React from 'react';\nimport FeatureDisplay from './_featureDisplay.mdx';\n// highlight-next-line\nimport MDXContent from '@theme/MDXContent';\n\nexport default function LandingPage() {\n  return (\n    <div>\n      {/* highlight-start */}\n      <MDXContent>\n        <FeatureDisplay />\n      </MDXContent>\n      {/* highlight-end */}\n    </div>\n  );\n}\n```\n\nIf you don't wrap your imported MDX with `MDXContent`, the global scope will not be available.\n\n:::",
      "source_content_hash": "1b4759e6815f77bb5f11f234869f54fd9295461223d674834997e06fb5a1c1f7",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n该功能由[`MDXProvider`](https://mdxjs.com/docs/using-mdx/#mdx-provider)驱动。若在React页面中导入Markdown，您需要通过`MDXContent`主题组件自行提供该Provider：\n\n```jsx title=\"src/pages/index.js\"\nimport React from 'react';\nimport FeatureDisplay from './_featureDisplay.mdx';\n// highlight-next-line\nimport MDXContent from '@theme/MDXContent';\n\nexport default function LandingPage() {\n  return (\n    <div>\n      {/* highlight-start */}\n      <MDXContent>\n        <FeatureDisplay />\n      </MDXContent>\n      {/* highlight-end */}\n    </div>\n  );\n}\n```\n\n若未用`MDXContent`包裹导入的MDX，全局作用域将不可用。\n\n:::"
      }
    },
    {
      "segment_id": "976a3cd0",
      "source_content": "### Markdown and JSX interoperability {#markdown-and-jsx-interoperability}",
      "source_content_hash": "973e307689270357362852baaec5a6573596de232e9f9b49032f1770886dcf1e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### Markdown与JSX的互操作性 {#markdown-and-jsx-interoperability}"
      }
    },
    {
      "segment_id": "f6479c91",
      "source_content": "Docusaurus v3 is using [MDX v3](https://mdxjs.com/blog/v3/).",
      "source_content_hash": "006074561ffab4663176fe10521423375b675b186439008c6a647e24a8be545e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus v3采用[MDX v3](https://mdxjs.com/blog/v3/)。"
      }
    },
    {
      "segment_id": "61e5dad6",
      "source_content": "The [MDX syntax](https://mdxjs.com/docs/what-is-mdx/#mdx-syntax) is mostly compatible with [CommonMark](https://commonmark.org/), but is much stricter because your `.mdx` files can use JSX and are compiled into real React components (check the [playground](https://mdxjs.com/playground/)).",
      "source_content_hash": "5b0efec94b1bcb6d2cefaee55becdb1080be6070f0cb28918d5b26b910beb86d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[MDX语法](https://mdxjs.com/docs/what-is-mdx/#mdx-syntax)基本兼容[CommonMark](https://commonmark.org/)，但更为严格，因为`.mdx`文件可使用JSX并被编译为真实React组件（参见[playground](https://mdxjs.com/playground/)）。"
      }
    },
    {
      "segment_id": "18ca7861",
      "source_content": "Some valid CommonMark features won't work with MDX ([more info](https://mdxjs.com/docs/what-is-mdx/#markdown)), notably:",
      "source_content_hash": "9353298707312228f9e86274c49dda79442e0d154fdb6e07996248ca730ed364",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "部分有效的CommonMark特性在MDX中不可用（[更多信息](https://mdxjs.com/docs/what-is-mdx/#markdown)），特别是："
      }
    },
    {
      "segment_id": "d5f26ef2",
      "source_content": "- Indented code blocks: use triple backticks instead\n- Autolinks (`<http://localhost:3000>`): use regular link syntax instead (`[http://localhost:3000](http://localhost:3000)`)\n- HTML syntax (`<p style=\"color: red;\">`): use JSX instead (`<p style={{color: 'red'}}>`)\n- Unescaped `{` and `<`: escape them with `\\` instead (`\\{` and `\\<`)",
      "source_content_hash": "b2fcb91369d4277487ef461d3c5de496049fbdb5e531168473a62585b0688999",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 缩进代码块：改用三重反引号\n- 自动链接（`<http://localhost:3000>`）：改用常规链接语法（`[http://localhost:3000](http://localhost:3000)`）\n- HTML语法（`<p style=\"color: red;\">`）：改用JSX（`<p style={{color: 'red'}}>`）\n- 未转义的`{`和`<`：使用`\\`转义（`\\{`和`\\<`）"
      }
    },
    {
      "segment_id": "81f3e055",
      "source_content": ":::danger[Experimental CommonMark support]\n\nDocusaurus v3 makes it possible to opt-in for a less strict, standard [CommonMark](https://commonmark.org/) support with the following options:\n\n- The `mdx.format: md` front matter\n- The `.md` file extension combined with the `siteConfig.markdown.format: \"detect\"` configuration\n\nThis feature is **experimental** and currently has a few [limitations](https://github.com/facebook/docusaurus/issues/9092).\n\n:::",
      "source_content_hash": "d5b32f2cbf3100e6f244ea77df36eb3b2e53668e4e9ad20bcf83e7488745f243",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::danger[实验性CommonMark支持]\n\nDocusaurus v3通过以下选项支持选择启用限制更少的标准[CommonMark](https://commonmark.org/)：\n\n- 前置声明`mdx.format: md`\n- 文件扩展名`.md`配合站点配置`siteConfig.markdown.format: \"detect\"`\n\n该功能目前处于**实验阶段**，存在若干[限制](https://github.com/facebook/docusaurus/issues/9092)。\n\n:::"
      }
    },
    {
      "segment_id": "a9950191",
      "source_content": "## Importing code snippets {#importing-code-snippets}",
      "source_content_hash": "7b797fdfa41e87f460824c01d095c6d56faa8419d553b96bccb8280104f56904",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 导入代码片段 {#importing-code-snippets}"
      }
    },
    {
      "segment_id": "d3f13bf4",
      "source_content": "You can not only import a file containing a component definition, but also import any code file as raw text, and then insert it in a code block, thanks to [Webpack raw-loader](https://webpack.js.org/loaders/raw-loader/). In order to use `raw-loader`, you first need to install it in your project:",
      "source_content_hash": "1f6c9d84cfe8be4593765950e2fd51720d2d3d072ed848c8d03ce5dffe638da5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您不仅可以导入包含组件定义的文件，还能借助[Webpack raw-loader](https://webpack.js.org/loaders/raw-loader/)将任何代码文件作为原始文本导入并插入代码块。要使用`raw-loader`，需先在项目中安装："
      }
    },
    {
      "segment_id": "9eaa3064",
      "source_content": "```bash npm2yarn\nnpm install --save raw-loader\n```",
      "source_content_hash": "dc19dceede52bf30a3df0ef3275c8c9bfd1f7b04458ba9d9a12987c910a6c7d3",
      "node_type": "code",
      "translatable": false,
      "translations": {}
    },
    {
      "segment_id": "318fb07e",
      "source_content": "Now you can import code snippets from another file as it is:",
      "source_content_hash": "0f334d39ceefd631da35943c12fa3099bc32f37af903e206275dd2c4008868dc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现在你可以直接导入另一个文件中的代码片段："
      }
    },
    {
      "segment_id": "868a2ef9",
      "source_content": "```jsx title=\"myMarkdownFile.mdx\"\nimport CodeBlock from '@theme/CodeBlock';\nimport MyComponentSource from '!!raw-loader!./myComponent';\n\n<CodeBlock language=\"jsx\">{MyComponentSource}</CodeBlock>\n```",
      "source_content_hash": "e011979ac4feea54f1ecbabacd71acc40b5db2e049ae96b0a95a6d725f1b41fd",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_868a2ef9"
      }
    },
    {
      "segment_id": "bd55fc5d",
      "source_content": "import CodeBlock from '@theme/CodeBlock';\nimport MyComponentSource from '!!raw-loader!@site/src/pages/examples/_myComponent';",
      "source_content_hash": "8ee0ab876de36d83cac341233545411c99910f015b7f72b2e40f7bcbc1c51962",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_bd55fc5d"
      }
    },
    {
      "segment_id": "5c035652",
      "source_content": "<BrowserWindow>\n\n<CodeBlock language=\"jsx\">{MyComponentSource}</CodeBlock>\n\n</BrowserWindow>",
      "source_content_hash": "94af37bb92e021bad9f1d5dc36c0d8594b08f8a153e124a120434555aa742025",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_5c035652"
      }
    },
    {
      "segment_id": "f4b938fe",
      "source_content": "See [using code blocks in JSX](./markdown-features-code-blocks.mdx#usage-in-jsx) for more details of the `<CodeBlock>` component.",
      "source_content_hash": "3f1d7c38f579a03b7e337295f486a2f5d3c79ebf1f59483cc08758bf32834487",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "有关 `<CodeBlock>` 组件的更多细节，请参阅 [JSX 中的代码块用法](./markdown-features-code-blocks.mdx#usage-in-jsx)。"
      }
    },
    {
      "segment_id": "bb4c48bc",
      "source_content": ":::note\n\nYou have to use `<CodeBlock>` rather than the Markdown triple-backtick ` ``` `, because the latter will ship out any of its content as-is, but you want to interpolate the imported text here.\n\n:::",
      "source_content_hash": "6531805d1f88acb45e491cf92e6decb3754ee544a1e23f3d1237a37fa45b2bf3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::note\n\n必须使用 `<CodeBlock>` 而非 Markdown 的三反引号 ```，因为后者会原样输出所有内容，而这里你需要对导入的文本进行插值处理。\n\n:::"
      }
    },
    {
      "segment_id": "1bf64e32",
      "source_content": ":::warning\n\nThis feature is experimental and might be subject to breaking API changes in the future.\n\n:::",
      "source_content_hash": "52a0e784b92203a36d13bda304c15cc49d116da38331f40dd1e23d3d17dfb433",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n此功能为实验性质，未来可能存在破坏性 API 变更。\n\n:::"
      }
    },
    {
      "segment_id": "1d7c4366",
      "source_content": "## Importing Markdown {#importing-markdown}",
      "source_content_hash": "4781b7c38eb3fb9eb12de03737649bc9cf269963a08ddb969a69e9f67a611270",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 导入 Markdown 文件 {#importing-markdown}"
      }
    },
    {
      "segment_id": "7fa65ec5",
      "source_content": "You can use Markdown files as components and import them elsewhere, either in Markdown files or in React pages.",
      "source_content_hash": "37b24dec7a240d6eec660b07add0c1f6bc9871b37573f188e3edc459212e4c07",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "你可以将 Markdown 文件作为组件导入到其他 Markdown 文件或 React 页面中使用。"
      }
    },
    {
      "segment_id": "7eb5b32d",
      "source_content": "By convention, using the **`_` filename prefix** will not create any doc page and means the Markdown file is a **\"partial\"**, to be imported by other files.",
      "source_content_hash": "17bee925b7970abfb3068895a1f40f778c03914bd9d9e5928c00dbe6d870d1e0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "按照约定，使用 **文件名前缀 `_`** 表示该 Markdown 文件是**\"局部\"**文件，不会被创建为独立文档页面，仅供其他文件导入使用。"
      }
    },
    {
      "segment_id": "00c94fa3",
      "source_content": "```md title=\"_markdown-partial-example.mdx\"\n<span>Hello {props.name}</span>\n\nThis is text some content from `_markdown-partial-example.mdx`.\n```",
      "source_content_hash": "10defea7e751d57ed77aefea4837ace8544e5b3ebc4f2417d3d2a8f1560c9f46",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_00c94fa3"
      }
    },
    {
      "segment_id": "6c91a0a1",
      "source_content": "```jsx title=\"someOtherDoc.mdx\"\nimport PartialExample from './_markdown-partial-example.mdx';\n\n<PartialExample name=\"Sebastien\" />\n```",
      "source_content_hash": "e7cab576127f77ad5bbaccad5bc5aa89aa3bd9d993dc6624ee41ada22e306fd9",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_6c91a0a1"
      }
    },
    {
      "segment_id": "01262104",
      "source_content": "import PartialExample from './_markdown-partial-example.mdx';",
      "source_content_hash": "7ba505a9939b5dd583e8428ea5f46d7642aafdeb487aaed8de071c4558fcc1de",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_01262104"
      }
    },
    {
      "segment_id": "1bd97d1b",
      "source_content": "<BrowserWindow>\n  <PartialExample name=\"Sebastien\" />\n</BrowserWindow>",
      "source_content_hash": "2b7b4a51480682b3992fb857d122a5a0ec596601c19248dd154d02d2c60a97bc",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_1bd97d1b"
      }
    },
    {
      "segment_id": "1f92e934",
      "source_content": "This way, you can reuse content among multiple pages and avoid duplicating materials.",
      "source_content_hash": "9b24b3f829e7077ae6eda6cce5e3b9bd925c7f6296f7b9ca3179e25310692958",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "通过这种方式，你可以在多个页面间复用内容，避免材料重复。"
      }
    },
    {
      "segment_id": "a1718d59",
      "source_content": ":::warning\n\nCurrently, the table of contents does not contain the imported Markdown headings. This is a technical limitation that we are trying to solve ([issue](https://github.com/facebook/docusaurus/issues/3915)).\n\n:::",
      "source_content_hash": "62fb3632f59f04aa04196f13f553c643333c19990c56e699747b6d4af1fbe85b",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n当前目录树(TOC)不会包含被导入的 Markdown 标题。这是我们正在解决的技术限制（[相关 issue](https://github.com/facebook/docusaurus/issues/3915)）。\n\n:::"
      }
    },
    {
      "segment_id": "c06a14cd",
      "source_content": "## Available exports {#available-exports}",
      "source_content_hash": "601f397853aa1759fcc0f7d8688f9027a8c87abd0c301a558e1b86e980bc01b5",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 可用导出项 {#available-exports}"
      }
    },
    {
      "segment_id": "b8954ec9",
      "source_content": "Within the MDX page, the following variables are available as globals:",
      "source_content_hash": "e61b023b9ccba6806a5eb6cbd574e77bb27fb988aaa5f25b86008132d42f20ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "在 MDX 页面中，以下变量可作为全局变量使用："
      }
    },
    {
      "segment_id": "80d662b3",
      "source_content": "- `frontMatter`: the front matter as a record of string keys and values;\n- `toc`: the table of contents, as a tree of headings. See also [Inline TOC](./markdown-features-toc.mdx#inline-table-of-contents) for a more concrete use-case.\n- `contentTitle`: the Markdown title, which is the first `h1` heading in the Markdown text. It's `undefined` if there isn't one (e.g. title specified in the front matter).",
      "source_content_hash": "a536bda9214d0cd3202716fa03241892921f64a095c90331b705b6533b10e1fb",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- `frontMatter`: 以字符串键值对形式存储的 front matter 元数据；\n- `toc`: 目录树结构。具体用例可参阅 [内联目录](./markdown-features-toc.mdx#inline-table-of-contents)；\n- `contentTitle`: Markdown 标题文本（即文档中第一个 `h1` 级标题）。如果不存在（例如 front matter 中已指定标题），则该值为 `undefined`。"
      }
    },
    {
      "segment_id": "31df1954",
      "source_content": "```jsx\nimport TOCInline from '@theme/TOCInline';\nimport CodeBlock from '@theme/CodeBlock';\n\nThe table of contents for this page, serialized:\n\n<CodeBlock className=\"language-json\">{JSON.stringify(toc, null, 2)}</CodeBlock>\n\nThe front matter of this page:\n\n<ul>\n  {Object.entries(frontMatter).map(([key, value]) => <li key={key}><b>{key}</b>: {value}</li>)}\n</ul>\n\n<p>The title of this page is: <b>{contentTitle}</b></p>\n```",
      "source_content_hash": "10c3df3b2f9e80a4692908071fd55c2d7019ec2bb0adb3f5ed5bbd113531d69c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_31df1954"
      }
    },
    {
      "segment_id": "95daf745",
      "source_content": "import TOCInline from '@theme/TOCInline';",
      "source_content_hash": "ecff7723b46248a52769f838f3a77ee791a6d3aec15d8cdb3775b3879ab251c6",
      "node_type": "mdxjsEsm",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_95daf745"
      }
    },
    {
      "segment_id": "1196e1d1",
      "source_content": "<BrowserWindow>\n\nThe table of contents for this page, serialized:\n\n<CodeBlock className=\"language-json\">{JSON.stringify(toc, null, 2)}</CodeBlock>\n\nThe front matter of this page:\n\n<ul>\n  {Object.entries(frontMatter).map(([key, value]) => <li key={key}><b>{key}</b>: {value}</li>)}\n</ul>\n\n<p>The title of this page is: <b>{contentTitle}</b></p>\n\n</BrowserWindow>",
      "source_content_hash": "9660819d980d4028701a24c4ca79d14200d3175b97d2198fe0fd02756ed87650",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_1196e1d1"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-3.0.1/guides/markdown-features/markdown-features-react.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.784742+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "6caeccf5206d3daf7fbe4fad5d909aeac688142352b2202480eddc36b381e25a"
  }
}