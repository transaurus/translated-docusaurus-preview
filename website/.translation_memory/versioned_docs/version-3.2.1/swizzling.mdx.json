{
  "source_file_path_relative_to_docusaurus_root": "versioned_docs/version-3.2.1/swizzling.mdx",
  "source_file_content_hash": "bec8dab89536ab13e9808b5d5c9463c7dacbd30de5f6ad87cceef27e7c9aa919",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ndescription: Customize your site's appearance through creating your own theme components\n---",
      "source_content_hash": "6ec4a4811cdaa830f9c3c9d642644120ff6c9a205e576e2dcc0b1773132b7477",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "f85bbfb4",
      "source_content": "# Swizzling",
      "source_content_hash": "b1133029c3f1cdf29a150119b82c2052ae199b284b215fafbc7d4040913e9678",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "# 组件置换(Swizzling)"
      }
    },
    {
      "segment_id": "6ef78e84",
      "source_content": "In this section, we will introduce how customization of layout is done in Docusaurus.",
      "source_content_hash": "ab4047d2c0ca933aa8bfd08698ff6206f64654551939f21c486ebc0c6c726153",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "本节将介绍如何在Docusaurus中进行布局定制。"
      }
    },
    {
      "segment_id": "cbf61009",
      "source_content": "> Déja vu...?",
      "source_content_hash": "b7d53b95ef5968350bd74e2fb5f527e813efcdeebea6e039a0e5d1f8580afffa",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> 似曾相识...？"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "This section is similar to [Styling and Layout](./styling-layout.mdx), but this time, we will customize React components themselves, rather than what they look like. We will talk about a central concept in Docusaurus: **swizzling**, which allows **deeper site customizations**.",
      "source_content_hash": "02504e5c29122dea7a368510230e9821f036ec7a5450d366223b276b0615eb3a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "本节内容与[样式与布局](./styling-layout.mdx)类似，但这次我们将定制React组件本身，而非其外观样式。我们将讨论Docusaurus的核心概念：**组件置换(Swizzling)**，该功能允许实现**更深度的站点定制**。"
      }
    },
    {
      "segment_id": "180bddb1",
      "source_content": "In practice, swizzling permits to **swap a theme component with your own implementation**, and it comes in 2 patterns:",
      "source_content_hash": "49582b50b4ee51f0ae515f3e9601b8525912a9ef73906d1360c317cbac73ee54",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "实际操作中，组件置换允许**用您自己的实现替换主题组件**，主要包含两种模式："
      }
    },
    {
      "segment_id": "4269e691",
      "source_content": "- [**Ejecting**](#ejecting): creates a **copy** of the original theme component, which you can fully **customize**\n- [**Wrapping**](#wrapping): creates a **wrapper** around the original theme component, which you can **enhance**",
      "source_content_hash": "311b7ca3828178eeb096769e5af784a93cf8ae6794698f7fdae30707b4e02192",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- [**弹出(Ejecting)**](#ejecting)：创建原始主题组件的**副本**，您可对其进行**完全自定义**\n- [**包装(Wrapping)**](#wrapping)：创建原始主题组件的**包装器**，您可对其进行**功能增强**"
      }
    },
    {
      "segment_id": "21c93b79",
      "source_content": "<details>\n\n<summary>Why is it called swizzling?</summary>\n\n**The name comes from Objective-C and Swift-UI**: [method swizzling](https://pspdfkit.com/blog/2019/swizzling-in-swift/) is the process of changing the implementation of an existing selector (method).\n\n**For Docusaurus, component swizzling means providing an alternative component that takes precedence over the component provided by the theme.**\n\nYou can think of it as [Monkey Patching](https://en.wikipedia.org/wiki/Monkey_patch) for React components, enabling you to override the default implementation. Gatsby has a similar concept called [theme shadowing](https://www.gatsbyjs.com/docs/how-to/plugins-and-themes/shadowing/).\n\nTo gain a deeper understanding of this, you have to understand [how theme components are resolved](./advanced/client.mdx#theme-aliases).\n\n</details>",
      "source_content_hash": "2c3b955b5ceaa32fba6edb777dde511784da6f6f8128ac5b12b0edf8ac0a1221",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_21c93b79"
      }
    },
    {
      "segment_id": "b25f21be",
      "source_content": "## Swizzling Process",
      "source_content_hash": "fb5ff7af43a069faa4ca13150f873d3b8b9f948f334cb99cd2db696f76d8611c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 置换流程"
      }
    },
    {
      "segment_id": "a1b3d8cb",
      "source_content": "### Overview",
      "source_content_hash": "baae707b217af6cc70173448eeaebf2e9e823284c0aa70b43a8a7496d52cdcb6",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 概述"
      }
    },
    {
      "segment_id": "517051a7",
      "source_content": "Docusaurus provides a convenient **interactive CLI** to swizzle components. You generally only need to remember the following command:",
      "source_content_hash": "613f0d2df69c727dbf416833c8cd356b760d652bb4a5f1abb378b7a161f062f2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Docusaurus提供了便捷的**交互式CLI**来置换组件，通常只需记住以下命令："
      }
    },
    {
      "segment_id": "4dd51304",
      "source_content": "```bash npm2yarn\nnpm run swizzle\n```",
      "source_content_hash": "689cf07f49583286d8c0d511b96e1cf2613d761133840ec642c9c0b628040baf",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_4dd51304"
      }
    },
    {
      "segment_id": "50746522",
      "source_content": "It will generate a new component in your `src/theme` directory, which should look like this example:",
      "source_content_hash": "e1198d70af15adae0ce4d5df2b3592267af4fd24014c7908a33de55da94e6979",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "该命令将在您的`src/theme`目录下生成新组件，生成文件类似以下示例："
      }
    },
    {
      "segment_id": "e2ae1ac7",
      "source_content": "<Tabs>\n<TabItem value=\"Ejecting\">\n\n```jsx title=\"src/theme/SomeComponent.js\"\nimport React from 'react';\n\nexport default function SomeComponent(props) {\n  // You can fully customize this implementation\n  // including changing the JSX, CSS and React hooks\n  return (\n    <div className=\"some-class\">\n      <h1>Some Component</h1>\n      <p>Some component implementation details</p>\n    </div>\n  );\n}\n```\n\n</TabItem>\n<TabItem value=\"Wrapping\">\n\n```jsx title=\"src/theme/SomeComponent.js\"\nimport React from 'react';\nimport SomeComponent from '@theme-original/SomeComponent';\n\nexport default function SomeComponentWrapper(props) {\n  // You can enhance the original component,\n  // including adding extra props or JSX elements around it\n  return (\n    <>\n      <SomeComponent {...props} />\n    </>\n  );\n}\n```\n\n</TabItem>\n</Tabs>",
      "source_content_hash": "5c4e978e0837a90322ba9432c651854958cabf8aa16e4d1948918a42cd48f11e",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_e2ae1ac7"
      }
    },
    {
      "segment_id": "a5c5772a",
      "source_content": "To get an overview of all the themes and components available to swizzle, run:",
      "source_content_hash": "4a77562b80bea5bc89fdd40447d740c2ba459b1141e8c96089e814b4cdf90081",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要查看所有可置换主题和组件的概览，请运行："
      }
    },
    {
      "segment_id": "65400624",
      "source_content": "```bash npm2yarn\nnpm run swizzle -- --list\n```",
      "source_content_hash": "fd29d83c28836578d949c0e781d787f33766a9456a652b5e38f1ad788b794f76",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_65400624"
      }
    },
    {
      "segment_id": "74dd7937",
      "source_content": "Use `--help` to see all available CLI options, or refer to the reference [swizzle CLI documentation](./cli.mdx#docusaurus-swizzle).",
      "source_content_hash": "848d9aea2fb9d634818ed116cac33457065f9b7a568882cfbb88d3ce67da909c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "使用`--help`查看所有可用CLI选项，或参考[swizzle CLI文档](./cli.mdx#docusaurus-swizzle)。"
      }
    },
    {
      "segment_id": "61dc1473",
      "source_content": ":::note\n\nAfter swizzling a component, **restart your dev server** in order for Docusaurus to know about the new component.\n\n:::",
      "source_content_hash": "1d9e0414b4147259c633f51f415b90dd6cba240eaadae73f4b5fd9782bee9099",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::note\n\n置换组件后，请**重启开发服务器**以使Docusaurus识别新组件。\n\n:::"
      }
    },
    {
      "segment_id": "29662466",
      "source_content": ":::warning[Prefer staying on the safe side]\n\nBe sure to understand [which components are **safe to swizzle**](#what-is-safe-to-swizzle). Some components are **internal implementation details** of a theme.\n\n:::",
      "source_content_hash": "ae731292fd2128c6256b2bd9a2f0fd9c00c512c557ac74b452eccb9c793601c0",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning[建议保持安全边界]\n\n请务必理解[哪些组件可以安全置换](#what-is-safe-to-swizzle)。某些组件是主题的**内部实现细节**。\n\n:::"
      }
    },
    {
      "segment_id": "5ae4e2a6",
      "source_content": ":::info\n\n`docusaurus swizzle` is only an automated way to help you swizzle the component. You can also create the `src/theme/SomeComponent.js` file manually, and Docusaurus will [resolve it](./advanced/client.mdx#theme-aliases). There's no internal magic behind this command!\n\n:::",
      "source_content_hash": "b346dea1d6805dcdebf4fc049f48b071601b5fe56d6e4c69001a51ac4f19bc33",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::info\n\n`docusaurus swizzle`仅是辅助置换组件的自动化工具。您也可以手动创建`src/theme/SomeComponent.js`文件，Docusaurus会[自动解析](./advanced/client.mdx#theme-aliases)。该命令背后并无特殊魔法！\n\n:::"
      }
    },
    {
      "segment_id": "f947c8e4",
      "source_content": "### Ejecting {#ejecting}",
      "source_content_hash": "b54ce6551c9a1b2ee40f8775a529b9019a2871ae91ea94672dfec8c093a8a5ab",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 弹出(Ejecting) {#ejecting}"
      }
    },
    {
      "segment_id": "7bc8bb24",
      "source_content": "Ejecting a theme component is the process of **creating a copy** of the original theme component, which you can **fully customize and override**.",
      "source_content_hash": "09cd8c790622b05c04d80c6dcca23189504e2dd8e7b30dcf340c6b21837940ba",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "弹出主题组件是指**创建原始组件的副本**，您可对该副本进行**完全自定义和重写**。"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "To eject a theme component, use the swizzle CLI interactively, or with the `--eject` option:",
      "source_content_hash": "a027593c47cb74e0c27ab28497755563bee7539d7a0f5c095a9c05c698f3a8b5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要弹出主题组件，可使用交互式swizzle CLI或带`--eject`选项执行："
      }
    },
    {
      "segment_id": "83537d8d",
      "source_content": "```bash npm2yarn\nnpm run swizzle [theme name] [component name] -- --eject\n```",
      "source_content_hash": "5c807bc959c5fee2e6afbfe25c31b49aced233ba23251c43128ecad7f6dc1346",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_83537d8d"
      }
    },
    {
      "segment_id": "1958bc43",
      "source_content": "An example:",
      "source_content_hash": "53b34f6388cdf7fe46503dd47cbb22d9cae4a9c680da1cef86f6a12de084c669",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "示例："
      }
    },
    {
      "segment_id": "1a63b635",
      "source_content": "```bash npm2yarn\nnpm run swizzle @docusaurus/theme-classic Footer -- --eject\n```",
      "source_content_hash": "0af89c6f86c289fab48a29c88a06b42fc63e3cd9e39c406eec59c18d27f3eb5c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_1a63b635"
      }
    },
    {
      "segment_id": "b6152880",
      "source_content": "This will copy the current `<Footer />` component's implementation to your site's `src/theme` directory. Docusaurus will now use this `<Footer>` component copy instead of the original one. You are now free to completely re-implement the `<Footer>` component.",
      "source_content_hash": "3117127db2a74b51b41081cf091366653ec504bb151aab44ce6bf058f2474c5d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "此操作会将当前`<Footer />`组件的实现复制到站点的`src/theme`目录。此后Docusaurus将使用该副本而非原始组件。您现在可以完全重新实现`<Footer>`组件。"
      }
    },
    {
      "segment_id": "4e583d18",
      "source_content": "```jsx title=\"src/theme/Footer/index.js\"\nimport React from 'react';\n\nexport default function Footer(props) {\n  return (\n    <footer>\n      <h1>This is my custom site footer</h1>\n      <p>And it is very different from the original</p>\n    </footer>\n  );\n}\n```",
      "source_content_hash": "ef997a84ac6ea589614fdea42e8dd66d2dac50be944702ea8612aa5ba6c1d12a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_4e583d18"
      }
    },
    {
      "segment_id": "55b3acdc",
      "source_content": ":::warning\n\nEjecting an [**unsafe**](#what-is-safe-to-swizzle) component can sometimes lead to copying a large amount of internal code, which you now have to maintain yourself. It can make Docusaurus upgrades more difficult, as you will need to migrate your customizations if the props received or internal theme APIs used have changed.\n\n**Prefer [wrapping](#wrapping) whenever possible**: the amount of code to maintain is smaller.\n\n:::",
      "source_content_hash": "d2022c8748e0708fe6f5f6e053354938ae6e1f87473638106c3666a4e13c5fe6",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::warning\n\n弹出[**不安全**](#what-is-safe-to-swizzle)组件可能导致复制大量内部代码，这些代码需要您自行维护。这会使Docusaurus升级更困难，因为若接收的props或使用的内部主题API发生变化，您需要迁移自定义内容。\n\n**尽可能优先选择[包装模式](#wrapping)**：需要维护的代码量更少。\n\n:::"
      }
    },
    {
      "segment_id": "fd42cd42",
      "source_content": ":::tip[Re-swizzling]\n\nTo keep ejected components up-to-date after a Docusaurus upgrade, re-run the eject command and compare the changes with `git diff`. You are also recommended to write a brief comment at the top of the file explaining what changes you have made, so that you could more easily re-apply your changes after re-ejection.\n\n:::",
      "source_content_hash": "3e9fa4c12ad5e25fda37c21cf09ca5ed6de51329f91b464bed1ed4ffd55336f3",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip[重新置换]\n\n为使弹出的组件在Docusaurus升级后保持最新，请重新执行弹出命令并通过`git diff`比对变更。建议在文件顶部添加简短注释说明您的修改内容，以便在重新弹出后更轻松地重新应用这些更改。\n\n:::"
      }
    },
    {
      "segment_id": "b77e7669",
      "source_content": "### Wrapping {#wrapping}",
      "source_content_hash": "a0ec1c9510ba28adb68ef815310819cfc871e5a9300b7f52f6ff8156519d5dd2",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 包装组件 {#wrapping}"
      }
    },
    {
      "segment_id": "619c3209",
      "source_content": "Wrapping a theme component is the process of **creating a wrapper** around the original theme component, which you can **enhance**.",
      "source_content_hash": "218df4a5edd669e8f21f331abc2ac1affdc7ce994cce6d8fc5359c57d5aea52a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "包装主题组件是指**围绕原有主题组件创建包装器**，从而对其进行**功能增强**。"
      }
    },
    {
      "segment_id": "44285072",
      "source_content": "To wrap a theme component, use the swizzle CLI interactively, or with the `--wrap` option:",
      "source_content_hash": "7c371f0b274813d0d962d6ce5be1da2ae6ed322e897fa388de9f0f6d8395d009",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要包装主题组件，可使用交互式 swizzle CLI 或添加 `--wrap` 选项："
      }
    },
    {
      "segment_id": "5680b15c",
      "source_content": "```bash npm2yarn\nnpm run swizzle [theme name] [component name] -- --wrap\n```",
      "source_content_hash": "04ad626f9ad40152aa85a2a08b4df81821e5566a3918fb3bb485b3664aefdb04",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_5680b15c"
      }
    },
    {
      "segment_id": "008183b0",
      "source_content": "An example:",
      "source_content_hash": "53b34f6388cdf7fe46503dd47cbb22d9cae4a9c680da1cef86f6a12de084c669",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "示例："
      }
    },
    {
      "segment_id": "71779666",
      "source_content": "```bash npm2yarn\nnpm run swizzle @docusaurus/theme-classic Footer -- --wrap\n```",
      "source_content_hash": "6c8235d804eeec804f514bd0aaea338432fcc6c15d59ccdaf714f4ac06634272",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_71779666"
      }
    },
    {
      "segment_id": "b08ad0b4",
      "source_content": "This will create a wrapper in your site's `src/theme` directory. Docusaurus will now use the `<FooterWrapper>` component instead of the original one. You can now add customizations around the original component.",
      "source_content_hash": "6951f72313a67b8cf4865f819ff27d5be66b746d2aad73be50accfe6693ed6f6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "这将在站点的 `src/theme` 目录中创建包装组件。Docusaurus 将使用 `<FooterWrapper>` 组件替代原组件，您可在原始组件周围添加自定义内容。"
      }
    },
    {
      "segment_id": "90c0aa8a",
      "source_content": "```jsx title=\"src/theme/Footer/index.js\"\nimport React from 'react';\nimport Footer from '@theme-original/Footer';\n\nexport default function FooterWrapper(props) {\n  return (\n    <>\n      <section>\n        <h2>Extra section</h2>\n        <p>This is an extra section that appears above the original footer</p>\n      </section>\n      <Footer {...props} />\n    </>\n  );\n}\n```",
      "source_content_hash": "d5fa3fdcd339640c921f9db40e44e850c53ada52b085833673e5f5a061e879d3",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_90c0aa8a"
      }
    },
    {
      "segment_id": "e32234e6",
      "source_content": "<details>\n  <summary>What is this <code>@theme-original</code> thing?</summary>\n\nDocusaurus uses [theme aliases](./advanced/client.mdx#theme-aliases) to resolve the theme components to use. The newly created wrapper takes the `@theme/SomeComponent` alias. `@theme-original/SomeComponent` permits to import original component that the wrapper shadows without creating an infinite import loop where the wrapper imports itself.\n\n</details>",
      "source_content_hash": "5fa698036204f3152620152fde7576e8f5437b5698e83905a7341bde49e6caa8",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_e32234e6"
      }
    },
    {
      "segment_id": "8fa54d9a",
      "source_content": ":::tip\n\nWrapping a theme is a great way to **add extra components around existing one** without [ejecting](#ejecting) it. For example, you can easily add a custom comment system under each blog post:\n\n```jsx title=\"src/theme/BlogPostItem.js\"\nimport React from 'react';\nimport BlogPostItem from '@theme-original/BlogPostItem';\nimport MyCustomCommentSystem from '@site/src/MyCustomCommentSystem';\n\nexport default function BlogPostItemWrapper(props) {\n  return (\n    <>\n      <BlogPostItem {...props} />\n      <MyCustomCommentSystem />\n    </>\n  );\n}\n```\n\n:::",
      "source_content_hash": "c2d0fabe37401f0bce060689e7fcb286ebe65fcb2a1f8b4690a9db6b6d48b14c",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n包装主题是**在不[弹出组件](#ejecting)的前提下，围绕现有组件添加额外元素**的绝佳方式。例如，您可以轻松在每篇博客文章下方添加自定义评论系统：\n\n```jsx title=\"src/theme/BlogPostItem.js\"\nimport React from 'react';\nimport BlogPostItem from '@theme-original/BlogPostItem';\nimport MyCustomCommentSystem from '@site/src/MyCustomCommentSystem';\n\nexport default function BlogPostItemWrapper(props) {\n  return (\n    <>\n      <BlogPostItem {...props} />\n      <MyCustomCommentSystem />\n    </>\n  );\n}\n```\n\n:::"
      }
    },
    {
      "segment_id": "be106497",
      "source_content": "## What is safe to swizzle? {#what-is-safe-to-swizzle}",
      "source_content_hash": "bd2025f7fa6bdaa071d6fcc2180165f08348ae3a82a774e09c4509073cf179b9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 哪些组件可以安全替换？ {#what-is-safe-to-swizzle}"
      }
    },
    {
      "segment_id": "863d59d4",
      "source_content": "> With great power comes great responsibility",
      "source_content_hash": "2ab6401aa281bb175aafb53a84a8acdf42e293c74fc021aa214bb53c149bf6ce",
      "node_type": "blockquote",
      "translatable": true,
      "translations": {
        "zh-CN": "> 能力越大，责任越大"
      }
    },
    {
      "segment_id": "5eedf0a1",
      "source_content": "Some theme components are **internal implementation details** of a theme. Docusaurus allows you to swizzle them, but it **might be risky**.",
      "source_content_hash": "ea76fe66e2fd23006bd4bd2ea7bbc13dd95aa0b679ecd36ff7a5f75db32b9745",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "部分主题组件属于主题的**内部实现细节**。Docusaurus 允许您替换它们，但这**可能存在风险**。"
      }
    },
    {
      "segment_id": "15af59c3",
      "source_content": "<details>\n\n<summary>Why is it risky?</summary>\n\nTheme authors (including us) might have to update their theme over time: changing the component props, name, file system location, types... For example, consider a component that receives two props `name` and `age`, but after a refactor, it now receives a `person` prop with the above two properties. Your component, which still expects these two props, will render `undefined` instead.\n\nMoreover, internal components may simply disappear. If a component is called `Sidebar` and it's later renamed to `DocSidebar`, your swizzled component will be completely ignored.\n\n**Theme components marked as unsafe may change in a backward-incompatible way between theme minor versions.** When upgrading a theme (or Docusaurus), your customizations might **behave unexpectedly**, and can even **break your site**.\n\n</details>",
      "source_content_hash": "c09f1a1c1fbf25d07f098747edadc376c98114c4ca113a883b0d4285073b90dd",
      "node_type": "mdxJsxFlowElement",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_15af59c3"
      }
    },
    {
      "segment_id": "d73903fc",
      "source_content": "For each theme component, the swizzle CLI will indicate **3 different levels of safety** declared by theme authors:",
      "source_content_hash": "ec1cfadd450bda02d2d924b424e09f518e458e0f18b7e27eef8ae7858b94178f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "对于每个主题组件，swizzle CLI 会标注主题作者声明的**三个安全等级**："
      }
    },
    {
      "segment_id": "9ffdd332",
      "source_content": "- **Safe**: this component is safe to be swizzled, its public API is considered stable, and no breaking changes should happen within a theme **major version**\n- **Unsafe**: this component is a theme implementation detail, not safe to be swizzled, and breaking changes might happen within a theme **minor version**\n- **Forbidden**: the swizzle CLI will prevent you from swizzling this component, because it is not designed to be swizzled at all",
      "source_content_hash": "60f5e1c00543e8993abab0cfc84191ed3729cc62d5417a3f70823b3106f5b68f",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- **安全**：该组件可安全替换，其公共 API 被视为稳定，在主题**主版本**内不会发生破坏性变更\n- **不安全**：该组件是主题实现细节，替换不安全，在主题**次版本**升级时可能发生破坏性变更\n- **禁止**：swizzle CLI 会阻止您替换该组件，因其设计初衷就禁止被替换"
      }
    },
    {
      "segment_id": "0b194c02",
      "source_content": ":::note\n\nSome components might be safe to wrap, but not safe to eject.\n\n:::",
      "source_content_hash": "3ea01093fbbba776f4e759c0f2b7ebe56f6e0feb2e71c9c874bfcefde38c3999",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::note\n\n某些组件可能适合包装但不适合弹出。\n\n:::"
      }
    },
    {
      "segment_id": "edf4af30",
      "source_content": ":::info\n\nDon't be too **afraid to swizzle unsafe components**: just keep in mind that **breaking changes** might happen, and you might need to upgrade your customizations manually on minor version upgrades.\n\n:::",
      "source_content_hash": "08afdbdfeb9124ab47cc0beed155620950df1aff15716c96f7746c5b2a8a2d71",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::info\n\n不必**过度担忧替换不安全组件**：只需注意**破坏性变更**可能发生，在次版本升级时可能需要手动调整定制内容。\n\n:::"
      }
    },
    {
      "segment_id": "bea06e2b",
      "source_content": ":::note[Report your use-case]\n\nIf you have a **strong use-case for swizzling an unsafe component**, please [**report it here**](https://github.com/facebook/docusaurus/discussions/5468) and we will work together to find a solution to make it safe.\n\n:::",
      "source_content_hash": "bab00a1c9551bd625c39eff03c171f2368390b508a7f076e21c227675d5e3202",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::note[提交您的用例]\n\n如果您有**必须替换不安全组件的强烈需求**，请[**在此提交报告**](https://github.com/facebook/docusaurus/discussions/5468)，我们将共同寻找使其安全的解决方案。\n\n:::"
      }
    },
    {
      "segment_id": "371cb514",
      "source_content": "## Which component should I swizzle? {#which-component-should-i-swizzle}",
      "source_content_hash": "b5cfea33420515fc4122e172a0a22174e23fa963e105817a11ac4bcf8f5f39cf",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 应该替换哪个组件？ {#which-component-should-i-swizzle}"
      }
    },
    {
      "segment_id": "5d5a3416",
      "source_content": "It is not always clear which component you should swizzle exactly to achieve the desired result. `@docusaurus/theme-classic`, which provides most of the theme components, has about [100 components](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme)!",
      "source_content_hash": "3deea3003a5e92ffd1d8ed07044b312933e4c3a3e90126de9b4c9fe538297ca0",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "有时难以准确判断应该替换哪个组件才能实现预期效果。提供大多数主题组件的 `@docusaurus/theme-classic` 包含约 [100 个组件](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme)！"
      }
    },
    {
      "segment_id": "b5c42d42",
      "source_content": ":::tip\n\nTo print an overview of all the `@docusaurus/theme-classic` components:\n\n```bash npm2yarn\nnpm run swizzle @docusaurus/theme-classic -- --list\n```\n\n:::",
      "source_content_hash": "cbcb5ab244892cfcebc88c8a9bfb10043cedf06d6b8dd170a90995140adbc029",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n要查看所有 `@docusaurus/theme-classic` 组件的概览：\n\n```bash npm2yarn\nnpm run swizzle @docusaurus/theme-classic -- --list\n```\n\n:::"
      }
    },
    {
      "segment_id": "f4b938fe",
      "source_content": "You can follow these steps to locate the appropriate component to swizzle:",
      "source_content_hash": "255959b8f4686d22dcdd8a3cea0e81ad195318bd0d1e31fcc3a7b560cf54b722",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "您可以通过以下步骤定位需要替换的组件："
      }
    },
    {
      "segment_id": "08cc9caa",
      "source_content": "1. **Component description.** Some components provide a short description, which is a good way to find the right one.\n2. **Component name.** Official theme components are semantically named, so you should be able to infer its function from the name. The swizzle CLI allows you to enter part of a component name to narrow down the available choices. For example, if you run `yarn swizzle @docusaurus/theme-classic`, and enter `Doc`, only the docs-related components will be listed.\n3. **Start with a higher-level component.** Components form a tree with some components importing others. Every route will be associated with one top-level component that the route will render (most of them listed in [Routing in content plugins](./advanced/routing.mdx#routing-in-content-plugins)). For example, all blog post pages have `@theme/BlogPostPage` as the topmost component. You can start with swizzling this component, and then go down the component tree to locate the component that renders just what you are targeting. Don't forget to unswizzle the rest by deleting the files after you've found the correct one, so you don't maintain too many components.\n4. **Read the [theme source code](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme)** and use search wisely.",
      "source_content_hash": "d22a3fe67ab1476f223ff1000e230a13e1e5fc1211932179e3f3ff0a24b6035b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. **组件描述**。部分组件会提供简短描述，这是快速定位目标组件的有效方式。\n2. **组件名称**。官方主题组件采用语义化命名，通常可通过名称推断其功能。使用交互式swizzle CLI时，输入组件名称片段即可筛选相关选项。例如执行`yarn swizzle @docusaurus/theme-classic`后输入`Doc`，将仅显示文档相关的组件列表。\n3. **从高层级组件入手**。组件之间存在树形结构关系，每个路由会关联一个顶级渲染组件（多数列在[内容插件路由](./advanced/routing.mdx#routing-in-content-plugins)中）。例如所有博客文章页面的最外层组件都是`@theme/BlogPostPage`。可先swizzle该组件，再沿组件树向下定位具体目标组件。定位后请及时删除其他非必要组件文件，避免维护过多自定义组件。\n4. **查阅[主题源码](https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme)**并善用搜索功能。"
      }
    },
    {
      "segment_id": "63cbc56d",
      "source_content": ":::tip[Just ask!]\n\nIf you still have no idea which component to swizzle to achieve the desired effect, you can reach out for help in one of our [support channels](/community/support).\n\nWe also want to understand better your fanciest customization use-cases, so please [**report them**](https://github.com/facebook/docusaurus/discussions/5468).\n\n:::",
      "source_content_hash": "6631f49db739e1b01379ea75c8b039e4ed8791a4cd21802f0c1e1f558bbaa597",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip[直接提问！]\n\n若仍无法确定应swizzle哪个组件来实现预期效果，可通过我们的[支持渠道](/community/support)寻求帮助。\n\n我们也非常希望了解您最前沿的定制需求，欢迎[提交反馈](https://github.com/facebook/docusaurus/discussions/5468)。\n\n:::"
      }
    },
    {
      "segment_id": "bea5d450",
      "source_content": "## Do I need to swizzle? {#do-i-need-to-swizzle}",
      "source_content_hash": "b00eafe0e682440a38edbb9405b5cc3ebbe671620d6b5443eac06325d20cd2e2",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 是否必须swizzle？ {#do-i-need-to-swizzle}"
      }
    },
    {
      "segment_id": "aa705b4d",
      "source_content": "Swizzling ultimately means you have to maintain some additional React code that interact with Docusaurus internal APIs. If you can, think about the following alternatives when customizing your site:",
      "source_content_hash": "99b299fcb047bdfd3a93f86b3322225e6d9f9dd049f9bbc78d1a0fe1212663e5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Swizzle意味着您需要维护与Docusaurus内部API交互的React代码。在定制站点时，请优先考虑以下替代方案："
      }
    },
    {
      "segment_id": "942db948",
      "source_content": "1. **Use CSS.** CSS rules and selectors can often help you achieve a decent degree of customization. Refer to [styling and layout](./styling-layout.mdx) for more details.\n2. **Use translations.** It may sound surprising, but translations are ultimately just a way to customize the text labels. For example, if your site's default language is `en`, you can still run `yarn write-translations -l en` and edit the `code.json` emitted. Refer to the [i18n tutorial](./i18n/i18n-tutorial.mdx) for more details.",
      "source_content_hash": "8af35db0546e0a5fc19b7eb19c6e38ab4cf45f47e62a1cc800b9704280079da3",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. **使用CSS**。CSS规则和选择器通常能实现相当程度的定制效果，详见[样式与布局](./styling-layout.mdx)。\n2. **利用国际化机制**。虽然看似意外，但翻译本质上是定制文本标签的途径。例如当站点默认语言为`en`时，仍可执行`yarn write-translations -l en`后编辑生成的`code.json`文件，具体参考[i18n教程](./i18n/i18n-tutorial.mdx)。"
      }
    },
    {
      "segment_id": "9db31b78",
      "source_content": ":::tip\n\n**The smaller, the better.** If swizzling is inevitable, prefer to swizzle only the relevant part and maintain as little code on your own as possible. Swizzling a small component often means less risk of **breaking changes** during upgrade.\n\n[Wrapping](#wrapping) is also a far safer alternative to [ejecting](#ejecting).\n\n:::",
      "source_content_hash": "ac4ce6b0ef07cea5acb55012301a8df4f876d985b993e979a184fbfe5ff3eb46",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n**组件粒度越小越好**。若必须swizzle，请仅定制相关部分并尽量减少自主维护的代码量。swizzle小型组件通常能降低升级时的**破坏性变更**风险。\n\n相比[完全替换(ejecting)](#ejecting)，[包装组件(wrapping)](#wrapping)也是更安全的选择。\n\n:::"
      }
    },
    {
      "segment_id": "052c158b",
      "source_content": "## Wrapping your site with `<Root>` {#wrapper-your-site-with-root}",
      "source_content_hash": "7ff58ee5c22301a183c370e441955af2a74d751f3b4ea3402205e2c9a9f52685",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 使用`<Root>`包装站点 {#wrapper-your-site-with-root}"
      }
    },
    {
      "segment_id": "a01e2096",
      "source_content": "The `<Root>` component is rendered at the **very top** of the React tree, above the theme `<Layout>`, and **never unmounts**. It is the perfect place to add stateful logic that should not be re-initialized across navigations (user authentication status, shopping cart state...).",
      "source_content_hash": "314d41cedd096d8cf4195b888effd437be38e97121f174513b3204a6816a1ac4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`<Root>`组件在React树的最顶层渲染（位于主题`<Layout>`之上），且**永远不会卸载**。这是添加跨页面导航时无需重新初始化状态逻辑（用户认证状态、购物车状态等）的理想位置。"
      }
    },
    {
      "segment_id": "130e2dfb",
      "source_content": "Swizzle it **manually** by creating a file at `src/theme/Root.js`:",
      "source_content_hash": "9afb5a1f4ada13479aa6d4f919ff101db9db3d6846654a746708d41f6e348d45",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "通过创建`src/theme/Root.js`文件进行**手动**swizzle："
      }
    },
    {
      "segment_id": "fa163a68",
      "source_content": "```js title=\"src/theme/Root.js\"\nimport React from 'react';\n\n// Default implementation, that you can customize\nexport default function Root({children}) {\n  return <>{children}</>;\n}\n```",
      "source_content_hash": "36279d26bcbd47112888e0dde479b12728bb1ee286dad4f9b89be57f2e28dde1",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_fa163a68"
      }
    },
    {
      "segment_id": "3ed0b458",
      "source_content": ":::tip\n\nUse this component to render React Context providers.\n\n:::",
      "source_content_hash": "9c5b3f71055b10ea03f37a33195782718d0076e19b1553be5813c90ea46f99a7",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n建议在此组件中渲染React Context提供器。\n\n:::"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/version-3.2.1/swizzling.mdx",
  "last_updated_timestamp": "2025-06-03T17:28:35.870621+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "bec8dab89536ab13e9808b5d5c9463c7dacbd30de5f6ad87cceef27e7c9aa919"
  }
}
